

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 20 16:25:26 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 18/08/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F25K80 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    82   000000                     
    83 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    84   000000                     
    85 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    86   000000                     
    87                           	psect	idataCOMRAM
    88   000668                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _periode
    92   000668  EFB9               	dw	61369
    93                           
    94                           	psect	mediumconst
    95   007EFE                     __pmediumconst:
    96                           	callstack 0
    97   007EFE  00                 	db	0
    98   007EFF                     _tri:
    99                           	callstack 0
   100   007EFF  09                 	db	9
   101   007F00  11                 	db	17
   102   007F01  1A                 	db	26
   103   007F02  22                 	db	34
   104   007F03  2B                 	db	43
   105   007F04  33                 	db	51
   106   007F05  3C                 	db	60
   107   007F06  44                 	db	68
   108   007F07  4D                 	db	77
   109   007F08  55                 	db	85
   110   007F09  5E                 	db	94
   111   007F0A  66                 	db	102
   112   007F0B  6F                 	db	111
   113   007F0C  77                 	db	119
   114   007F0D  80                 	db	128
   115   007F0E  88                 	db	136
   116   007F0F  91                 	db	145
   117   007F10  99                 	db	153
   118   007F11  A2                 	db	162
   119   007F12  AA                 	db	170
   120   007F13  B3                 	db	179
   121   007F14  BB                 	db	187
   122   007F15  C4                 	db	196
   123   007F16  CC                 	db	204
   124   007F17  D5                 	db	213
   125   007F18  DD                 	db	221
   126   007F19  E6                 	db	230
   127   007F1A  EE                 	db	238
   128   007F1B  F7                 	db	247
   129   007F1C  FF                 	db	255
   130   007F1D  F7                 	db	247
   131   007F1E  EE                 	db	238
   132   007F1F  E6                 	db	230
   133   007F20  DD                 	db	221
   134   007F21  D5                 	db	213
   135   007F22  CC                 	db	204
   136   007F23  C4                 	db	196
   137   007F24  BB                 	db	187
   138   007F25  B3                 	db	179
   139   007F26  AA                 	db	170
   140   007F27  A2                 	db	162
   141   007F28  99                 	db	153
   142   007F29  91                 	db	145
   143   007F2A  88                 	db	136
   144   007F2B  80                 	db	128
   145   007F2C  77                 	db	119
   146   007F2D  6F                 	db	111
   147   007F2E  66                 	db	102
   148   007F2F  5E                 	db	94
   149   007F30  56                 	db	86
   150   007F31  4D                 	db	77
   151   007F32  44                 	db	68
   152   007F33  3C                 	db	60
   153   007F34  33                 	db	51
   154   007F35  2B                 	db	43
   155   007F36  22                 	db	34
   156   007F37  1A                 	db	26
   157   007F38  11                 	db	17
   158   007F39  09                 	db	9
   159   007F3A  00                 	db	0
   160   007F3B                     __end_of_tri:
   161                           	callstack 0
   162   007F3B                     _car:
   163                           	callstack 0
   164   007F3B  00                 	db	0
   165   007F3C  00                 	db	0
   166   007F3D  00                 	db	0
   167   007F3E  00                 	db	0
   168   007F3F  00                 	db	0
   169   007F40  00                 	db	0
   170   007F41  00                 	db	0
   171   007F42  00                 	db	0
   172   007F43  00                 	db	0
   173   007F44  00                 	db	0
   174   007F45  00                 	db	0
   175   007F46  00                 	db	0
   176   007F47  00                 	db	0
   177   007F48  00                 	db	0
   178   007F49  00                 	db	0
   179   007F4A  00                 	db	0
   180   007F4B  00                 	db	0
   181   007F4C  00                 	db	0
   182   007F4D  00                 	db	0
   183   007F4E  00                 	db	0
   184   007F4F  00                 	db	0
   185   007F50  00                 	db	0
   186   007F51  00                 	db	0
   187   007F52  00                 	db	0
   188   007F53  00                 	db	0
   189   007F54  00                 	db	0
   190   007F55  00                 	db	0
   191   007F56  00                 	db	0
   192   007F57  00                 	db	0
   193   007F58  00                 	db	0
   194   007F59  FF                 	db	255
   195   007F5A  FF                 	db	255
   196   007F5B  FF                 	db	255
   197   007F5C  FF                 	db	255
   198   007F5D  FF                 	db	255
   199   007F5E  FF                 	db	255
   200   007F5F  FF                 	db	255
   201   007F60  FF                 	db	255
   202   007F61  FF                 	db	255
   203   007F62  FF                 	db	255
   204   007F63  FF                 	db	255
   205   007F64  FF                 	db	255
   206   007F65  FF                 	db	255
   207   007F66  FF                 	db	255
   208   007F67  FF                 	db	255
   209   007F68  FF                 	db	255
   210   007F69  FF                 	db	255
   211   007F6A  FF                 	db	255
   212   007F6B  FF                 	db	255
   213   007F6C  FF                 	db	255
   214   007F6D  FF                 	db	255
   215   007F6E  FF                 	db	255
   216   007F6F  FF                 	db	255
   217   007F70  FF                 	db	255
   218   007F71  FF                 	db	255
   219   007F72  FF                 	db	255
   220   007F73  FF                 	db	255
   221   007F74  FF                 	db	255
   222   007F75  FF                 	db	255
   223   007F76  FF                 	db	255
   224   007F77                     __end_of_car:
   225                           	callstack 0
   226   007F77                     _sin:
   227                           	callstack 0
   228   007F77  FE                 	db	254
   229   007F78  FE                 	db	254
   230   007F79  FC                 	db	252
   231   007F7A  F9                 	db	249
   232   007F7B  F4                 	db	244
   233   007F7C  EE                 	db	238
   234   007F7D  E7                 	db	231
   235   007F7E  DE                 	db	222
   236   007F7F  D5                 	db	213
   237   007F80  CA                 	db	202
   238   007F81  BF                 	db	191
   239   007F82  B3                 	db	179
   240   007F83  A7                 	db	167
   241   007F84  9A                 	db	154
   242   007F85  8D                 	db	141
   243   007F86  7F                 	db	127
   244   007F87  72                 	db	114
   245   007F88  65                 	db	101
   246   007F89  58                 	db	88
   247   007F8A  4C                 	db	76
   248   007F8B  40                 	db	64
   249   007F8C  35                 	db	53
   250   007F8D  2A                 	db	42
   251   007F8E  21                 	db	33
   252   007F8F  18                 	db	24
   253   007F90  11                 	db	17
   254   007F91  0B                 	db	11
   255   007F92  06                 	db	6
   256   007F93  03                 	db	3
   257   007F94  01                 	db	1
   258   007F95  00                 	db	0
   259   007F96  01                 	db	1
   260   007F97  03                 	db	3
   261   007F98  06                 	db	6
   262   007F99  0B                 	db	11
   263   007F9A  11                 	db	17
   264   007F9B  18                 	db	24
   265   007F9C  21                 	db	33
   266   007F9D  2A                 	db	42
   267   007F9E  35                 	db	53
   268   007F9F  40                 	db	64
   269   007FA0  4C                 	db	76
   270   007FA1  58                 	db	88
   271   007FA2  65                 	db	101
   272   007FA3  72                 	db	114
   273   007FA4  80                 	db	128
   274   007FA5  8D                 	db	141
   275   007FA6  9A                 	db	154
   276   007FA7  A7                 	db	167
   277   007FA8  B3                 	db	179
   278   007FA9  BF                 	db	191
   279   007FAA  CA                 	db	202
   280   007FAB  D5                 	db	213
   281   007FAC  DE                 	db	222
   282   007FAD  E7                 	db	231
   283   007FAE  EE                 	db	238
   284   007FAF  F4                 	db	244
   285   007FB0  F9                 	db	249
   286   007FB1  FC                 	db	252
   287   007FB2  FE                 	db	254
   288   007FB3                     __end_of_sin:
   289                           	callstack 0
   290   007FB3                     _spi_configuration:
   291                           	callstack 0
   292   007FB3  02                 	db	2
   293   007FB4  40                 	db	64
   294   007FB5  01                 	db	1
   295   007FB6  00                 	db	0
   296   007FB7                     __end_of_spi_configuration:
   297                           	callstack 0
   298   000000                     _TXREG1	set	4013
   299   000000                     _RCREG1	set	4014
   300   000000                     _SPBRG1	set	4015
   301   000000                     _TXSTA1	set	4012
   302   007FB7                     STR_9:
   303   007FB7  0A                 	db	10
   304   007FB8  0D                 	db	13
   305   007FB9  49                 	db	73	;'I'
   306   007FBA  6E                 	db	110	;'n'
   307   007FBB  70                 	db	112	;'p'
   308   007FBC  75                 	db	117	;'u'
   309   007FBD  74                 	db	116	;'t'
   310   007FBE  20                 	db	32
   311   007FBF  6F                 	db	111	;'o'
   312   007FC0  6E                 	db	110	;'n'
   313   007FC1  64                 	db	100	;'d'
   314   007FC2  65                 	db	101	;'e'
   315   007FC3  20                 	db	32
   316   007FC4  61                 	db	97	;'a'
   317   007FC5  76                 	db	118	;'v'
   318   007FC6  65                 	db	101	;'e'
   319   007FC7  63                 	db	99	;'c'
   320   007FC8  20                 	db	32
   321   007FC9  73                 	db	115	;'s'
   322   007FCA  2C                 	db	44
   323   007FCB  63                 	db	99	;'c'
   324   007FCC  2C                 	db	44
   325   007FCD  74                 	db	116	;'t'
   326   007FCE  00                 	db	0
   327   007FCF                     STR_5:
   328   007FCF  0A                 	db	10
   329   007FD0  0D                 	db	13
   330   007FD1  31                 	db	49	;'1'
   331   007FD2  30                 	db	48	;'0'
   332   007FD3  30                 	db	48	;'0'
   333   007FD4  48                 	db	72	;'H'
   334   007FD5  7A                 	db	122	;'z'
   335   007FD6  00                 	db	0
   336   007FD7                     STR_1:
   337   007FD7  0A                 	db	10
   338   007FD8  0D                 	db	13
   339   007FD9  32                 	db	50	;'2'
   340   007FDA  30                 	db	48	;'0'
   341   007FDB  48                 	db	72	;'H'
   342   007FDC  7A                 	db	122	;'z'
   343   007FDD  00                 	db	0
   344   007FDE                     STR_2:
   345   007FDE  0A                 	db	10
   346   007FDF  0D                 	db	13
   347   007FE0  34                 	db	52	;'4'
   348   007FE1  30                 	db	48	;'0'
   349   007FE2  48                 	db	72	;'H'
   350   007FE3  7A                 	db	122	;'z'
   351   007FE4  00                 	db	0
   352   007FE5                     STR_3:
   353   007FE5  0A                 	db	10
   354   007FE6  0D                 	db	13
   355   007FE7  36                 	db	54	;'6'
   356   007FE8  30                 	db	48	;'0'
   357   007FE9  48                 	db	72	;'H'
   358   007FEA  7A                 	db	122	;'z'
   359   007FEB  00                 	db	0
   360   007FEC                     STR_4:
   361   007FEC  0A                 	db	10
   362   007FED  0D                 	db	13
   363   007FEE  38                 	db	56	;'8'
   364   007FEF  30                 	db	48	;'0'
   365   007FF0  48                 	db	72	;'H'
   366   007FF1  7A                 	db	122	;'z'
   367   007FF2  00                 	db	0
   368   007FF3                     STR_7:
   369   007FF3  0A                 	db	10
   370   007FF4  0D                 	db	13
   371   007FF5  63                 	db	99	;'c'
   372   007FF6  00                 	db	0
   373   007FF7                     STR_6:
   374   007FF7  0A                 	db	10
   375   007FF8  0D                 	db	13
   376   007FF9  73                 	db	115	;'s'
   377   007FFA  00                 	db	0
   378   007FFB                     STR_8:
   379   007FFB  0A                 	db	10
   380   007FFC  0D                 	db	13
   381   007FFD  74                 	db	116	;'t'
   382   007FFE  00                 	db	0
   383   007FFF  00                 	db	0	; dummy byte at the end
   384   000000                     
   385                           	psect	nvCOMRAM
   386   00004D                     __pnvCOMRAM:
   387                           	callstack 0
   388   00004D                     _TMR1_InterruptHandler:
   389                           	callstack 0
   390   00004D                     	ds	2
   391   00004F                     _EUSART1_ErrorHandler:
   392                           	callstack 0
   393   00004F                     	ds	2
   394   000051                     _EUSART1_OverrunErrorHandler:
   395                           	callstack 0
   396   000051                     	ds	2
   397   000053                     _EUSART1_FramingErrorHandler:
   398                           	callstack 0
   399   000053                     	ds	2
   400   000000                     _LATAbits	set	3977
   401   000000                     _T1GCONbits	set	4010
   402   000000                     _T1CONbits	set	4045
   403   000000                     _RCSTA1bits	set	4011
   404   000000                     _TXSTA1bits	set	4012
   405   000000                     _SSPCON1bits	set	4038
   406   000000                     _TRISCbits	set	3988
   407   000000                     _WPUB	set	3931
   408   000000                     _ANCON1	set	3932
   409   000000                     _ANCON0	set	3933
   410   000000                     _LATA	set	3977
   411   000000                     _REFOCON	set	3994
   412   000000                     _OSCTUNE	set	3995
   413   000000                     _OSCCON2	set	4050
   414   000000                     _OSCCON	set	4051
   415   000000                     _INTCON2bits	set	4081
   416   000000                     _PIE1bits	set	3997
   417   000000                     _PIR1bits	set	3998
   418   000000                     _SSPCON2	set	4037
   419   000000                     _SSPCON1	set	4038
   420   000000                     _SSPSTAT	set	4039
   421   000000                     _TRISA	set	3986
   422   000000                     _LATC	set	3979
   423   000000                     _LATB	set	3978
   424   000000                     _TRISC	set	3988
   425   000000                     _TRISB	set	3987
   426   000000                     _SPBRGH1	set	3965
   427   000000                     _INTCONbits	set	4082
   428   000000                     _T1CON	set	4045
   429   000000                     _TMR1L	set	4046
   430   000000                     _TMR1H	set	4047
   431   000000                     _SSPBUF	set	4041
   432   000000                     _SSPADD	set	4040
   433   000000                     _BAUDCON1	set	4007
   434   000000                     _T1GCON	set	4010
   435   000000                     _RCSTA1	set	4011
   436   000000                     _RCONbits	set	4048
   437                           
   438                           ; #config settings
   439                           
   440                           	psect	cinit
   441   0004AA                     __pcinit:
   442                           	callstack 0
   443   0004AA                     start_initialization:
   444                           	callstack 0
   445   0004AA                     __initialization:
   446                           	callstack 0
   447                           
   448                           ; Initialize objects allocated to COMRAM (2 bytes)
   449                           ; load TBLPTR registers with __pidataCOMRAM
   450   0004AA  0E68               	movlw	low __pidataCOMRAM
   451   0004AC  6EF6               	movwf	tblptrl,c
   452   0004AE  0E06               	movlw	high __pidataCOMRAM
   453   0004B0  6EF7               	movwf	tblptrh,c
   454   0004B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   455   0004B4  6EF8               	movwf	tblptru,c
   456   0004B6  0009               	tblrd		*+	;fetch initializer
   457   0004B8  CFF5 F055          	movff	tablat,__pdataCOMRAM
   458   0004BC  0009               	tblrd		*+	;fetch initializer
   459   0004BE  CFF5 F056          	movff	tablat,__pdataCOMRAM+1
   460                           
   461                           ; Clear objects allocated to COMRAM (42 bytes)
   462   0004C2  EE00  F001         	lfsr	0,__pbssCOMRAM
   463   0004C6  0E2A               	movlw	42
   464   0004C8                     clear_0:
   465   0004C8  6AEE               	clrf	postinc0,c
   466   0004CA  06E8               	decf	wreg,f,c
   467   0004CC  E1FD               	bnz	clear_0
   468   0004CE                     end_of_initialization:
   469                           	callstack 0
   470   0004CE                     __end_of__initialization:
   471                           	callstack 0
   472   0004CE  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   473   0004D0  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   474   0004D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   475   0004D4  6EF8               	movwf	tblptru,c
   476   0004D6  0100               	movlb	0
   477   0004D8  EF28  F000         	goto	_main	;jump to C main() function
   478                           
   479                           	psect	bssCOMRAM
   480   000001                     __pbssCOMRAM:
   481                           	callstack 0
   482   000001                     	ds	32
   483   000021                     _width:
   484                           	callstack 0
   485   000021                     	ds	2
   486   000023                     _prec:
   487                           	callstack 0
   488   000023                     	ds	2
   489   000025                     _timer1ReloadVal:
   490                           	callstack 0
   491   000025                     	ds	2
   492   000027                     _flags:
   493                           	callstack 0
   494   000027                     	ds	1
   495   000028                     _flag:
   496                           	callstack 0
   497   000028                     	ds	1
   498   000029                     _i:
   499                           	callstack 0
   500   000029                     	ds	1
   501   00002A                     _eusart1RxLastError:
   502                           	callstack 0
   503   00002A                     	ds	1
   504                           
   505                           	psect	dataCOMRAM
   506   000055                     __pdataCOMRAM:
   507                           	callstack 0
   508   000055                     _periode:
   509                           	callstack 0
   510   000055                     	ds	2
   511                           
   512                           	psect	cstackCOMRAM
   513   00002B                     __pcstackCOMRAM:
   514                           	callstack 0
   515   00002B                     TMR1_WriteTimer@timerVal:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x0
   519   00002B                     	ds	2
   520   00002D                     ??_INTERRUPT_InterruptManager:
   521                           
   522                           ; 1 bytes @ 0x2
   523   00002D                     	ds	2
   524   00002F                     SPI_ExchangeByte@data:
   525                           	callstack 0
   526   00002F                     EUSART1_Write@txData:
   527                           	callstack 0
   528   00002F                     EUSART1_SetFramingErrorHandler@interruptHandler:
   529                           	callstack 0
   530   00002F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   531                           	callstack 0
   532   00002F                     EUSART1_SetErrorHandler@interruptHandler:
   533                           	callstack 0
   534   00002F                     TMR1_SetInterruptHandler@InterruptHandler:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x4
   538   00002F                     	ds	1
   539   000030                     putch@txData:
   540                           	callstack 0
   541   000030                     out_dig@x:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x5
   545   000030                     	ds	1
   546   000031                     ??_TMR1_Initialize:
   547   000031                     fputc@c:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x6
   551   000031                     	ds	2
   552   000033                     fputc@fp:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x8
   556   000033                     	ds	2
   557   000035                     ??_fputc:
   558                           
   559                           ; 1 bytes @ 0xA
   560   000035                     	ds	5
   561   00003A                     vfpfcnvrt@fp:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0xF
   565   00003A                     	ds	2
   566   00003C                     vfpfcnvrt@fmt:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x11
   570   00003C                     	ds	1
   571   00003D                     vfpfcnvrt@ap:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x12
   575   00003D                     	ds	1
   576   00003E                     ?_vfprintf:
   577                           	callstack 0
   578   00003E                     vfprintf@fp:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x13
   582   00003E                     	ds	2
   583   000040                     vfprintf@fmt:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x15
   587   000040                     	ds	2
   588   000042                     vfprintf@ap:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x17
   592   000042                     	ds	1
   593   000043                     vfprintf@cfmt:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x18
   597   000043                     	ds	2
   598   000045                     ?_printf:
   599                           	callstack 0
   600   000045                     printf@fmt:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x1A
   604   000045                     	ds	2
   605   000047                     printf@ap:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x1C
   609   000047                     	ds	1
   610   000048                     ??_main:
   611                           
   612                           ; 1 bytes @ 0x1D
   613   000048                     	ds	2
   614   00004A                     main@lettre:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x1F
   618   00004A                     	ds	1
   619   00004B                     main@lecture:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x20
   623   00004B                     	ds	1
   624   00004C                     main@freq:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x21
   628   00004C                     	ds	1
   629                           
   630 ;;
   631 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   632 ;;
   633 ;; *************** function _main *****************
   634 ;; Defined at:
   635 ;;		line 52 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  freq            1   33[COMRAM] unsigned char 
   640 ;;  lecture         1   32[COMRAM] unsigned char 
   641 ;;  lettre          1   31[COMRAM] unsigned char 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
   651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   652 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   654 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   655 ;;Total ram usage:        5 bytes
   656 ;; Hardware stack levels required when called: 10
   657 ;; This function calls:
   658 ;;		_EUSART1_Read
   659 ;;		_EUSART1_is_rx_ready
   660 ;;		_SYSTEM_Initialize
   661 ;;		_TMR1_SetInterruptHandler
   662 ;;		_out_dig
   663 ;;		_printf
   664 ;; This function is called by:
   665 ;;		Startup code after reset
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text0
   670   000050                     __ptext0:
   671                           	callstack 0
   672   000050                     _main:
   673                           	callstack 21
   674   000050                     
   675                           ;main.c: 55:     uint8_t lettre = 'A';
   676   000050  0E41               	movlw	65
   677   000052  6E4A               	movwf	main@lettre^0,c
   678                           
   679                           ;main.c: 56:     uint8_t freq = 0;
   680   000054  0E00               	movlw	0
   681   000056  6E4C               	movwf	main@freq^0,c
   682   000058                     
   683                           ;main.c: 61:     SYSTEM_Initialize();
   684   000058  ECDB  F002         	call	_SYSTEM_Initialize	;wreg free
   685   00005C                     
   686                           ;main.c: 63:     (INTCONbits.GIE = 1);
   687   00005C  8EF2               	bsf	242,7,c	;volatile
   688   00005E                     
   689                           ;main.c: 65:     (INTCONbits.PEIE = 1);
   690   00005E  8CF2               	bsf	242,6,c	;volatile
   691   000060                     
   692                           ;main.c: 67:     TMR1_SetInterruptHandler(myTimer1_ISR);
   693   000060  0EDC               	movlw	low _myTimer1_ISR
   694   000062  6E2F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   695   000064  0E04               	movlw	high _myTimer1_ISR
   696   000066  6E30               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   697   000068  EC1E  F003         	call	_TMR1_SetInterruptHandler	;wreg free
   698   00006C                     
   699                           ;main.c: 69:     SSPCON1bits.SSPEN = 1;
   700   00006C  8AC6               	bsf	198,5,c	;volatile
   701   00006E  8A89               	bsf	137,5,c	;volatile
   702   000070  EF3A  F000         	goto	l1644
   703   000074                     l330:
   704   000074                     l1644:
   705                           
   706                           ;main.c: 73:     {;main.c: 99:         if(flag == 1)
   707   000074  0428               	decf	_flag^0,w,c
   708   000076  A4D8               	btfss	status,2,c
   709   000078  EF40  F000         	goto	u451
   710   00007C  EF42  F000         	goto	u450
   711   000080                     u451:
   712   000080  EF3A  F000         	goto	l1644
   713   000084                     u450:
   714   000084                     
   715                           ;main.c: 100:         {;main.c: 101:             if(EUSART1_is_rx_ready()){
   716   000084  ECFD  F002         	call	_EUSART1_is_rx_ready	;wreg free
   717   000088  0900               	iorlw	0
   718   00008A  B4D8               	btfsc	status,2,c
   719   00008C  EF4A  F000         	goto	u461
   720   000090  EF4C  F000         	goto	u460
   721   000094                     u461:
   722   000094  EF1E  F001         	goto	l1722
   723   000098                     u460:
   724   000098                     
   725                           ;main.c: 102:                 lecture = EUSART1_Read();
   726   000098  EC97  F002         	call	_EUSART1_Read	;wreg free
   727   00009C  6E4B               	movwf	main@lecture^0,c
   728   00009E                     
   729                           ;main.c: 103:                 if(lecture == '+')
   730   00009E  0E2B               	movlw	43
   731   0000A0  184B               	xorwf	main@lecture^0,w,c
   732   0000A2  A4D8               	btfss	status,2,c
   733   0000A4  EF56  F000         	goto	u471
   734   0000A8  EF58  F000         	goto	u470
   735   0000AC                     u471:
   736   0000AC  EF65  F000         	goto	l1658
   737   0000B0                     u470:
   738   0000B0                     
   739                           ;main.c: 104:                 {;main.c: 105:                     freq++;
   740   0000B0  2A4C               	incf	main@freq^0,f,c
   741   0000B2                     
   742                           ;main.c: 106:                     if(freq >= 4)
   743   0000B2  0E03               	movlw	3
   744   0000B4  644C               	cpfsgt	main@freq^0,c
   745   0000B6  EF5F  F000         	goto	u481
   746   0000BA  EF61  F000         	goto	u480
   747   0000BE                     u481:
   748   0000BE  EFBF  F000         	goto	l1698
   749   0000C2                     u480:
   750   0000C2                     
   751                           ;main.c: 107:                     {;main.c: 108:                         freq = 4;
   752   0000C2  0E04               	movlw	4
   753   0000C4  6E4C               	movwf	main@freq^0,c
   754   0000C6  EFBF  F000         	goto	l1698
   755   0000CA                     l1658:
   756   0000CA  0E2D               	movlw	45
   757   0000CC  184B               	xorwf	main@lecture^0,w,c
   758   0000CE  A4D8               	btfss	status,2,c
   759   0000D0  EF6C  F000         	goto	u491
   760   0000D4  EF6E  F000         	goto	u490
   761   0000D8                     u491:
   762   0000D8  EF7B  F000         	goto	l337
   763   0000DC                     u490:
   764   0000DC                     
   765                           ;main.c: 112:                 {;main.c: 113:                     freq--;
   766   0000DC  064C               	decf	main@freq^0,f,c
   767   0000DE                     
   768                           ;main.c: 114:                     if(freq <= 0)
   769   0000DE  504C               	movf	main@freq^0,w,c
   770   0000E0  A4D8               	btfss	status,2,c
   771   0000E2  EF75  F000         	goto	u501
   772   0000E6  EF77  F000         	goto	u500
   773   0000EA                     u501:
   774   0000EA  EF7F  F000         	goto	l336
   775   0000EE                     u500:
   776   0000EE                     
   777                           ;main.c: 115:                     {;main.c: 116:                         freq = 0;
   778   0000EE  0E00               	movlw	0
   779   0000F0  6E4C               	movwf	main@freq^0,c
   780   0000F2  EFBF  F000         	goto	l1698
   781   0000F6                     l337:
   782                           
   783                           ;main.c: 120:                 {;main.c: 121:                     lettre=lecture;
   784   0000F6  C04B  F04A         	movff	main@lecture,main@lettre
   785   0000FA  EFBF  F000         	goto	l1698
   786   0000FE                     l336:
   787                           
   788                           ;main.c: 123:                 switch(freq)
   789   0000FE  EFBF  F000         	goto	l1698
   790   000102                     l1666:
   791                           
   792                           ;main.c: 126:                         periode=0xEFB9;
   793   000102  0EEF               	movlw	239
   794   000104  6E56               	movwf	(_periode+1)^0,c
   795   000106  0EB9               	movlw	185
   796   000108  6E55               	movwf	_periode^0,c
   797   00010A                     
   798                           ;main.c: 127:                         printf("\n\r20Hz");
   799   00010A  0ED7               	movlw	low STR_1
   800   00010C  6E45               	movwf	printf@fmt^0,c
   801   00010E  0E7F               	movlw	high STR_1
   802   000110  6E46               	movwf	(printf@fmt+1)^0,c
   803   000112  ECBF  F002         	call	_printf	;wreg free
   804   000116                     l1670:
   805                           
   806                           ;main.c: 128:                         flag = 0;
   807   000116  0E00               	movlw	0
   808   000118  6E28               	movwf	_flag^0,c
   809                           
   810                           ;main.c: 129:                         break;
   811   00011A  EF3A  F000         	goto	l1644
   812   00011E                     l1672:
   813                           
   814                           ;main.c: 131:                         periode=0xF7DD;
   815   00011E  0EF7               	movlw	247
   816   000120  6E56               	movwf	(_periode+1)^0,c
   817   000122  0EDD               	movlw	221
   818   000124  6E55               	movwf	_periode^0,c
   819   000126                     
   820                           ;main.c: 132:                         printf("\n\r40Hz");
   821   000126  0EDE               	movlw	low STR_2
   822   000128  6E45               	movwf	printf@fmt^0,c
   823   00012A  0E7F               	movlw	high STR_2
   824   00012C  6E46               	movwf	(printf@fmt+1)^0,c
   825   00012E  ECBF  F002         	call	_printf	;wreg free
   826   000132  EF8B  F000         	goto	l1670
   827   000136                     l1678:
   828                           
   829                           ;main.c: 136:                         periode=0xFA90;
   830   000136  0EFA               	movlw	250
   831   000138  6E56               	movwf	(_periode+1)^0,c
   832   00013A  0E90               	movlw	144
   833   00013C  6E55               	movwf	_periode^0,c
   834   00013E                     
   835                           ;main.c: 137:                         printf("\n\r60Hz");
   836   00013E  0EE5               	movlw	low STR_3
   837   000140  6E45               	movwf	printf@fmt^0,c
   838   000142  0E7F               	movlw	high STR_3
   839   000144  6E46               	movwf	(printf@fmt+1)^0,c
   840   000146  ECBF  F002         	call	_printf	;wreg free
   841   00014A  EF8B  F000         	goto	l1670
   842   00014E                     l1684:
   843                           
   844                           ;main.c: 141:                         periode=0xFBEE;
   845   00014E  0EFB               	movlw	251
   846   000150  6E56               	movwf	(_periode+1)^0,c
   847   000152  0EEE               	movlw	238
   848   000154  6E55               	movwf	_periode^0,c
   849   000156                     
   850                           ;main.c: 142:                         printf("\n\r80Hz");
   851   000156  0EEC               	movlw	low STR_4
   852   000158  6E45               	movwf	printf@fmt^0,c
   853   00015A  0E7F               	movlw	high STR_4
   854   00015C  6E46               	movwf	(printf@fmt+1)^0,c
   855   00015E  ECBF  F002         	call	_printf	;wreg free
   856   000162  EF8B  F000         	goto	l1670
   857   000166                     l1690:
   858                           
   859                           ;main.c: 146:                         periode=0xFCBF;
   860   000166  0EFC               	movlw	252
   861   000168  6E56               	movwf	(_periode+1)^0,c
   862   00016A  0EBF               	movlw	191
   863   00016C  6E55               	movwf	_periode^0,c
   864   00016E                     
   865                           ;main.c: 147:                         printf("\n\r100Hz");
   866   00016E  0ECF               	movlw	low STR_5
   867   000170  6E45               	movwf	printf@fmt^0,c
   868   000172  0E7F               	movlw	high STR_5
   869   000174  6E46               	movwf	(printf@fmt+1)^0,c
   870   000176  ECBF  F002         	call	_printf	;wreg free
   871   00017A  EF8B  F000         	goto	l1670
   872   00017E                     l1698:
   873   00017E  504C               	movf	main@freq^0,w,c
   874   000180  6E48               	movwf	??_main^0,c
   875   000182  6A49               	clrf	(??_main+1)^0,c
   876                           
   877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   878                           ; Switch size 1, requested type "simple"
   879                           ; Number of cases is 1, Range of values is 0 to 0
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte            4     3 (average)
   883                           ;	Chosen strategy is simple_byte
   884   000184  5049               	movf	(??_main+1)^0,w,c
   885   000186  0A00               	xorlw	0	; case 0
   886   000188  B4D8               	btfsc	status,2,c
   887   00018A  EFC9  F000         	goto	l1772
   888   00018E  EF3A  F000         	goto	l330
   889   000192                     l1772:
   890                           
   891                           ; Switch size 1, requested type "simple"
   892                           ; Number of cases is 5, Range of values is 0 to 4
   893                           ; switch strategies available:
   894                           ; Name         Instructions Cycles
   895                           ; simple_byte           16     9 (average)
   896                           ;	Chosen strategy is simple_byte
   897   000192  5048               	movf	??_main^0,w,c
   898   000194  0A00               	xorlw	0	; case 0
   899   000196  B4D8               	btfsc	status,2,c
   900   000198  EF81  F000         	goto	l1666
   901   00019C  0A01               	xorlw	1	; case 1
   902   00019E  B4D8               	btfsc	status,2,c
   903   0001A0  EF8F  F000         	goto	l1672
   904   0001A4  0A03               	xorlw	3	; case 2
   905   0001A6  B4D8               	btfsc	status,2,c
   906   0001A8  EF9B  F000         	goto	l1678
   907   0001AC  0A01               	xorlw	1	; case 3
   908   0001AE  B4D8               	btfsc	status,2,c
   909   0001B0  EFA7  F000         	goto	l1684
   910   0001B4  0A07               	xorlw	7	; case 4
   911   0001B6  B4D8               	btfsc	status,2,c
   912   0001B8  EFB3  F000         	goto	l1690
   913   0001BC  EF3A  F000         	goto	l330
   914   0001C0                     l1700:
   915                           
   916                           ;main.c: 161:                         out_dig(sin[i]);
   917   0001C0  0E77               	movlw	low _sin
   918   0001C2  2429               	addwf	_i^0,w,c
   919   0001C4  6EF6               	movwf	tblptrl,c
   920   0001C6  6AF7               	clrf	tblptrh,c
   921   0001C8  0E7F               	movlw	high _sin
   922   0001CA  22F7               	addwfc	tblptrh,f,c
   923   0001CC                     	if	0	;There are less than 3 active tblptr bytes
   924   0001CC                     	endif
   925   0001CC  0008               	tblrd		*
   926   0001CE  50F5               	movf	tablat,w,c
   927   0001D0  ECF3  F002         	call	_out_dig
   928   0001D4                     
   929                           ;main.c: 162:                         printf("\n\rs");
   930   0001D4  0EF7               	movlw	low STR_6
   931   0001D6  6E45               	movwf	printf@fmt^0,c
   932   0001D8  0E7F               	movlw	high STR_6
   933   0001DA  6E46               	movwf	(printf@fmt+1)^0,c
   934   0001DC  ECBF  F002         	call	_printf	;wreg free
   935   0001E0  EF8B  F000         	goto	l1670
   936   0001E4                     l1706:
   937                           
   938                           ;main.c: 167:                         out_dig(car[i]);
   939   0001E4  0E3B               	movlw	low _car
   940   0001E6  2429               	addwf	_i^0,w,c
   941   0001E8  6EF6               	movwf	tblptrl,c
   942   0001EA  6AF7               	clrf	tblptrh,c
   943   0001EC  0E7F               	movlw	high _car
   944   0001EE  22F7               	addwfc	tblptrh,f,c
   945   0001F0                     	if	0	;There are less than 3 active tblptr bytes
   946   0001F0                     	endif
   947   0001F0  0008               	tblrd		*
   948   0001F2  50F5               	movf	tablat,w,c
   949   0001F4  ECF3  F002         	call	_out_dig
   950   0001F8                     
   951                           ;main.c: 168:                         printf("\n\rc");
   952   0001F8  0EF3               	movlw	low STR_7
   953   0001FA  6E45               	movwf	printf@fmt^0,c
   954   0001FC  0E7F               	movlw	high STR_7
   955   0001FE  6E46               	movwf	(printf@fmt+1)^0,c
   956   000200  ECBF  F002         	call	_printf	;wreg free
   957   000204  EF8B  F000         	goto	l1670
   958   000208                     l1712:
   959                           
   960                           ;main.c: 173:                         out_dig(tri[i]);
   961   000208  0EFF               	movlw	low _tri
   962   00020A  2429               	addwf	_i^0,w,c
   963   00020C  6EF6               	movwf	tblptrl,c
   964   00020E  6AF7               	clrf	tblptrh,c
   965   000210  0E7E               	movlw	high _tri
   966   000212  22F7               	addwfc	tblptrh,f,c
   967   000214                     	if	0	;There are less than 3 active tblptr bytes
   968   000214                     	endif
   969   000214  0008               	tblrd		*
   970   000216  50F5               	movf	tablat,w,c
   971   000218  ECF3  F002         	call	_out_dig
   972   00021C                     
   973                           ;main.c: 174:                         printf("\n\rt");
   974   00021C  0EFB               	movlw	low STR_8
   975   00021E  6E45               	movwf	printf@fmt^0,c
   976   000220  0E7F               	movlw	high STR_8
   977   000222  6E46               	movwf	(printf@fmt+1)^0,c
   978   000224  ECBF  F002         	call	_printf	;wreg free
   979   000228  EF8B  F000         	goto	l1670
   980   00022C                     l1718:
   981                           
   982                           ;main.c: 178:                         printf("\n\rInput onde avec s,c,t");
   983   00022C  0EB7               	movlw	low STR_9
   984   00022E  6E45               	movwf	printf@fmt^0,c
   985   000230  0E7F               	movlw	high STR_9
   986   000232  6E46               	movwf	(printf@fmt+1)^0,c
   987   000234  ECBF  F002         	call	_printf	;wreg free
   988                           
   989                           ;main.c: 179:                         break;
   990   000238  EF3A  F000         	goto	l1644
   991   00023C                     l1722:
   992   00023C  504A               	movf	main@lettre^0,w,c
   993   00023E  6E48               	movwf	??_main^0,c
   994   000240  6A49               	clrf	(??_main+1)^0,c
   995                           
   996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   997                           ; Switch size 1, requested type "simple"
   998                           ; Number of cases is 1, Range of values is 0 to 0
   999                           ; switch strategies available:
  1000                           ; Name         Instructions Cycles
  1001                           ; simple_byte            4     3 (average)
  1002                           ;	Chosen strategy is simple_byte
  1003   000242  5049               	movf	(??_main+1)^0,w,c
  1004   000244  0A00               	xorlw	0	; case 0
  1005   000246  B4D8               	btfsc	status,2,c
  1006   000248  EF28  F001         	goto	l1774
  1007   00024C  EF16  F001         	goto	l1718
  1008   000250                     l1774:
  1009                           
  1010                           ; Switch size 1, requested type "simple"
  1011                           ; Number of cases is 3, Range of values is 99 to 116
  1012                           ; switch strategies available:
  1013                           ; Name         Instructions Cycles
  1014                           ; simple_byte           10     6 (average)
  1015                           ;	Chosen strategy is simple_byte
  1016   000250  5048               	movf	??_main^0,w,c
  1017   000252  0A63               	xorlw	99	; case 99
  1018   000254  B4D8               	btfsc	status,2,c
  1019   000256  EFF2  F000         	goto	l1706
  1020   00025A  0A10               	xorlw	16	; case 115
  1021   00025C  B4D8               	btfsc	status,2,c
  1022   00025E  EFE0  F000         	goto	l1700
  1023   000262  0A07               	xorlw	7	; case 116
  1024   000264  B4D8               	btfsc	status,2,c
  1025   000266  EF04  F001         	goto	l1712
  1026   00026A  EF16  F001         	goto	l1718
  1027   00026E  EF26  F000         	goto	start
  1028   000272                     __end_of_main:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _printf *****************
  1032 ;; Defined at:
  1033 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\printf.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  fmt             2   26[COMRAM] PTR const unsigned char 
  1036 ;;		 -> STR_9(24), STR_8(4), STR_7(4), STR_6(4), 
  1037 ;;		 -> STR_5(8), STR_4(7), STR_3(7), STR_2(7), 
  1038 ;;		 -> STR_1(7), 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  ret             2    0        int 
  1041 ;;  ap              1   28[COMRAM] PTR void [1]
  1042 ;;		 -> ?_printf(2), 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2   26[COMRAM] int 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1055 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1056 ;;Total ram usage:        3 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; Hardware stack levels required when called: 9
  1059 ;; This function calls:
  1060 ;;		_vfprintf
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text1
  1067   00057E                     __ptext1:
  1068                           	callstack 0
  1069   00057E                     _printf:
  1070                           	callstack 21
  1071   00057E  0E47               	movlw	low (?_printf+2)
  1072   000580  6E47               	movwf	printf@ap^0,c
  1073   000582  0E00               	movlw	0
  1074   000584  6E3E               	movwf	vfprintf@fp^0,c
  1075   000586  0E00               	movlw	0
  1076   000588  6E3F               	movwf	(vfprintf@fp+1)^0,c
  1077   00058A  C045  F040         	movff	printf@fmt,vfprintf@fmt
  1078   00058E  C046  F041         	movff	printf@fmt+1,vfprintf@fmt+1
  1079   000592  0E47               	movlw	low printf@ap
  1080   000594  6E42               	movwf	vfprintf@ap^0,c
  1081   000596  ECD9  F001         	call	_vfprintf	;wreg free
  1082   00059A  0012               	return		;funcret
  1083   00059C                     __end_of_printf:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _vfprintf *****************
  1087 ;; Defined at:
  1088 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  1091 ;;		 -> NULL(0), 
  1092 ;;  fmt             2   21[COMRAM] PTR const unsigned char 
  1093 ;;		 -> STR_9(24), STR_8(4), STR_7(4), STR_6(4), 
  1094 ;;		 -> STR_5(8), STR_4(7), STR_3(7), STR_2(7), 
  1095 ;;		 -> STR_1(7), 
  1096 ;;  ap              1   23[COMRAM] PTR PTR void 
  1097 ;;		 -> printf@ap(1), 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  cfmt            2   24[COMRAM] PTR unsigned char 
  1100 ;;		 -> STR_9(24), STR_8(4), STR_7(4), STR_6(4), 
  1101 ;;		 -> STR_5(8), STR_4(7), STR_3(7), STR_2(7), 
  1102 ;;		 -> STR_1(7), 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  2   19[COMRAM] int 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1112 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1116 ;;Total ram usage:        7 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 8
  1119 ;; This function calls:
  1120 ;;		_vfpfcnvrt
  1121 ;; This function is called by:
  1122 ;;		_printf
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text2
  1127   0003B2                     __ptext2:
  1128                           	callstack 0
  1129   0003B2                     _vfprintf:
  1130                           	callstack 21
  1131   0003B2                     
  1132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1133   0003B2  C040  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  1134   0003B6  C041  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1135                           
  1136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1137   0003BA  EFE9  F001         	goto	l1588
  1138   0003BE                     l1586:
  1139                           
  1140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1141   0003BE  C03E  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1142   0003C2  C03F  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1143   0003C6  0E43               	movlw	low vfprintf@cfmt
  1144   0003C8  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1145   0003CA  C042  F03D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1146   0003CE  EC9E  F001         	call	_vfpfcnvrt	;wreg free
  1147   0003D2                     l1588:
  1148                           
  1149                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1150   0003D2  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  1151   0003D6  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1152   0003DA                     	if	0	;tblptru may be non-zero
  1153   0003DA                     	endif
  1154   0003DA                     	if	0	;tblptru may be non-zero
  1155   0003DA                     	endif
  1156   0003DA  0008               	tblrd		*
  1157   0003DC  50F5               	movf	tablat,w,c
  1158   0003DE  0900               	iorlw	0
  1159   0003E0  A4D8               	btfss	status,2,c
  1160   0003E2  EFF5  F001         	goto	u391
  1161   0003E6  EFF7  F001         	goto	u390
  1162   0003EA                     u391:
  1163   0003EA  EFDF  F001         	goto	l1586
  1164   0003EE                     u390:
  1165   0003EE                     
  1166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1167   0003EE  0E00               	movlw	0
  1168   0003F0  6E3F               	movwf	(?_vfprintf+1)^0,c
  1169   0003F2  0E00               	movlw	0
  1170   0003F4  6E3E               	movwf	?_vfprintf^0,c
  1171   0003F6  0012               	return		;funcret
  1172   0003F8                     __end_of_vfprintf:
  1173                           	callstack 0
  1174                           
  1175 ;; *************** function _vfpfcnvrt *****************
  1176 ;; Defined at:
  1177 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1180 ;;		 -> NULL(0), 
  1181 ;;  fmt             1   17[COMRAM] PTR PTR unsigned char 
  1182 ;;		 -> vfprintf@cfmt(2), 
  1183 ;;  ap              1   18[COMRAM] PTR PTR void 
  1184 ;;		 -> printf@ap(1), 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  cp              3    0        PTR unsigned char 
  1187 ;;  done            1    0        _Bool 
  1188 ;;  c               1    0        unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1201 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1202 ;;Total ram usage:        4 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 7
  1205 ;; This function calls:
  1206 ;;		_fputc
  1207 ;; This function is called by:
  1208 ;;		_vfprintf
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text3
  1213   00033C                     __ptext3:
  1214                           	callstack 0
  1215   00033C                     _vfpfcnvrt:
  1216                           	callstack 21
  1217   00033C                     
  1218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1219   00033C  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1220   00033E  6ED9               	movwf	fsr2l,c
  1221   000340  6ADA               	clrf	fsr2h,c
  1222   000342  CFDE FFF6          	movff	postinc2,tblptrl
  1223   000346  CFDD FFF7          	movff	postdec2,tblptrh
  1224   00034A                     	if	0	;tblptru may be non-zero
  1225   00034A                     	endif
  1226   00034A                     	if	0	;tblptru may be non-zero
  1227   00034A                     	endif
  1228   00034A  0008               	tblrd		*
  1229   00034C  50F5               	movf	tablat,w,c
  1230   00034E  0A25               	xorlw	37
  1231   000350  A4D8               	btfss	status,2,c
  1232   000352  EFAD  F001         	goto	u371
  1233   000356  EFAF  F001         	goto	u370
  1234   00035A                     u371:
  1235   00035A  EFC5  F001         	goto	l1546
  1236   00035E                     u370:
  1237   00035E                     
  1238                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1239   00035E  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1240   000360  6ED9               	movwf	fsr2l,c
  1241   000362  6ADA               	clrf	fsr2h,c
  1242   000364  2ADE               	incf	postinc2,f,c
  1243   000366  0E00               	movlw	0
  1244   000368  22DD               	addwfc	postdec2,f,c
  1245   00036A                     
  1246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1247   00036A  0E00               	movlw	0
  1248   00036C  6E22               	movwf	(_width+1)^0,c
  1249   00036E  0E00               	movlw	0
  1250   000370  6E21               	movwf	_width^0,c
  1251   000372  C021  F027         	movff	_width,_flags
  1252   000376                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1254   000376  6823               	setf	_prec^0,c
  1255   000378  6824               	setf	(_prec+1)^0,c
  1256   00037A                     l1542:
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1259   00037A  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1260   00037C  6ED9               	movwf	fsr2l,c
  1261   00037E  6ADA               	clrf	fsr2h,c
  1262   000380  2ADE               	incf	postinc2,f,c
  1263   000382  0E00               	movlw	0
  1264   000384  22DD               	addwfc	postdec2,f,c
  1265   000386  EFD8  F001         	goto	l1072
  1266   00038A                     l1546:
  1267                           
  1268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1269   00038A  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1270   00038C  6ED9               	movwf	fsr2l,c
  1271   00038E  6ADA               	clrf	fsr2h,c
  1272   000390  CFDE FFF6          	movff	postinc2,tblptrl
  1273   000394  CFDD FFF7          	movff	postdec2,tblptrh
  1274   000398                     	if	0	;tblptru may be non-zero
  1275   000398                     	endif
  1276   000398                     	if	0	;tblptru may be non-zero
  1277   000398                     	endif
  1278   000398  0008               	tblrd		*
  1279   00039A  50F5               	movf	tablat,w,c
  1280   00039C  6E31               	movwf	fputc@c^0,c
  1281   00039E  6A32               	clrf	(fputc@c+1)^0,c
  1282   0003A0  C03A  F033         	movff	vfpfcnvrt@fp,fputc@fp
  1283   0003A4  C03B  F034         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1284   0003A8  EC39  F001         	call	_fputc	;wreg free
  1285   0003AC  EFBD  F001         	goto	l1542
  1286   0003B0                     l1072:
  1287   0003B0  0012               	return		;funcret
  1288   0003B2                     __end_of_vfpfcnvrt:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _fputc *****************
  1292 ;; Defined at:
  1293 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  c               2    6[COMRAM] int 
  1296 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  1297 ;;		 -> NULL(0), 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  2    6[COMRAM] int 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1311 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1312 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;Total ram usage:        9 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 6
  1316 ;; This function calls:
  1317 ;;		_putch
  1318 ;; This function is called by:
  1319 ;;		_vfpfcnvrt
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text4
  1324   000272                     __ptext4:
  1325                           	callstack 0
  1326   000272                     _fputc:
  1327                           	callstack 21
  1328   000272  5033               	movf	fputc@fp^0,w,c
  1329   000274  1034               	iorwf	(fputc@fp+1)^0,w,c
  1330   000276  B4D8               	btfsc	status,2,c
  1331   000278  EF40  F001         	goto	u321
  1332   00027C  EF42  F001         	goto	u320
  1333   000280                     u321:
  1334   000280  EF4B  F001         	goto	l1502
  1335   000284                     u320:
  1336   000284  5033               	movf	fputc@fp^0,w,c
  1337   000286  1034               	iorwf	(fputc@fp+1)^0,w,c
  1338   000288  A4D8               	btfss	status,2,c
  1339   00028A  EF49  F001         	goto	u331
  1340   00028E  EF4B  F001         	goto	u330
  1341   000292                     u331:
  1342   000292  EF50  F001         	goto	l1504
  1343   000296                     u330:
  1344   000296                     l1502:
  1345   000296  5031               	movf	fputc@c^0,w,c
  1346   000298  EC19  F003         	call	_putch
  1347   00029C  EF9D  F001         	goto	l1090
  1348   0002A0                     l1504:
  1349   0002A0  EE20 F00A          	lfsr	2,10
  1350   0002A4  5033               	movf	fputc@fp^0,w,c
  1351   0002A6  26D9               	addwf	fsr2l,f,c
  1352   0002A8  5034               	movf	(fputc@fp+1)^0,w,c
  1353   0002AA  22DA               	addwfc	fsr2h,f,c
  1354   0002AC  50DE               	movf	postinc2,w,c
  1355   0002AE  10DE               	iorwf	postinc2,w,c
  1356   0002B0  B4D8               	btfsc	status,2,c
  1357   0002B2  EF5D  F001         	goto	u341
  1358   0002B6  EF5F  F001         	goto	u340
  1359   0002BA                     u341:
  1360   0002BA  EF7A  F001         	goto	l1508
  1361   0002BE                     u340:
  1362   0002BE  EE20 F00A          	lfsr	2,10
  1363   0002C2  5033               	movf	fputc@fp^0,w,c
  1364   0002C4  26D9               	addwf	fsr2l,f,c
  1365   0002C6  5034               	movf	(fputc@fp+1)^0,w,c
  1366   0002C8  22DA               	addwfc	fsr2h,f,c
  1367   0002CA  EE10 F003          	lfsr	1,3
  1368   0002CE  5033               	movf	fputc@fp^0,w,c
  1369   0002D0  26E1               	addwf	fsr1l,f,c
  1370   0002D2  5034               	movf	(fputc@fp+1)^0,w,c
  1371   0002D4  22E2               	addwfc	fsr1h,f,c
  1372   0002D6  50DE               	movf	postinc2,w,c
  1373   0002D8  5CE6               	subwf	postinc1,w,c
  1374   0002DA  50E6               	movf	postinc1,w,c
  1375   0002DC  0A80               	xorlw	128
  1376   0002DE  6E39               	movwf	(??_fputc+4)^0,c
  1377   0002E0  50DE               	movf	postinc2,w,c
  1378   0002E2  0A80               	xorlw	128
  1379   0002E4  5839               	subwfb	(??_fputc+4)^0,w,c
  1380   0002E6  B0D8               	btfsc	status,0,c
  1381   0002E8  EF78  F001         	goto	u351
  1382   0002EC  EF7A  F001         	goto	u350
  1383   0002F0                     u351:
  1384   0002F0  EF9D  F001         	goto	l1090
  1385   0002F4                     u350:
  1386   0002F4                     l1508:
  1387   0002F4  EE20 F003          	lfsr	2,3
  1388   0002F8  5033               	movf	fputc@fp^0,w,c
  1389   0002FA  26D9               	addwf	fsr2l,f,c
  1390   0002FC  5034               	movf	(fputc@fp+1)^0,w,c
  1391   0002FE  22DA               	addwfc	fsr2h,f,c
  1392   000300  CFDE F035          	movff	postinc2,??_fputc
  1393   000304  CFDD F036          	movff	postdec2,??_fputc+1
  1394   000308  C033  FFD9         	movff	fputc@fp,fsr2l
  1395   00030C  C034  FFDA         	movff	fputc@fp+1,fsr2h
  1396   000310  CFDE F037          	movff	postinc2,??_fputc+2
  1397   000314  CFDD F038          	movff	postdec2,??_fputc+3
  1398   000318  5035               	movf	??_fputc^0,w,c
  1399   00031A  2437               	addwf	(??_fputc+2)^0,w,c
  1400   00031C  6ED9               	movwf	fsr2l,c
  1401   00031E  5036               	movf	(??_fputc+1)^0,w,c
  1402   000320  2038               	addwfc	(??_fputc+3)^0,w,c
  1403   000322  6EDA               	movwf	fsr2h,c
  1404   000324  C031  FFDF         	movff	fputc@c,indf2
  1405   000328  EE20 F003          	lfsr	2,3
  1406   00032C  5033               	movf	fputc@fp^0,w,c
  1407   00032E  26D9               	addwf	fsr2l,f,c
  1408   000330  5034               	movf	(fputc@fp+1)^0,w,c
  1409   000332  22DA               	addwfc	fsr2h,f,c
  1410   000334  2ADE               	incf	postinc2,f,c
  1411   000336  0E00               	movlw	0
  1412   000338  22DD               	addwfc	postdec2,f,c
  1413   00033A                     l1090:
  1414   00033A  0012               	return		;funcret
  1415   00033C                     __end_of_fputc:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _putch *****************
  1419 ;; Defined at:
  1420 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  txData          1    wreg     unsigned char 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  txData          1    5[COMRAM] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1438 ;;Total ram usage:        1 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 5
  1441 ;; This function calls:
  1442 ;;		_EUSART1_Write
  1443 ;; This function is called by:
  1444 ;;		_fputc
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text5
  1449   000632                     __ptext5:
  1450                           	callstack 0
  1451   000632                     _putch:
  1452                           	callstack 21
  1453                           
  1454                           ;incstack = 0
  1455                           ;putch@txData stored from wreg
  1456   000632  6E30               	movwf	putch@txData^0,c
  1457   000634                     
  1458                           ;mcc_generated_files/eusart1.c: 141: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 142: {;mcc_generated_files/eusart1.c: 143:     EUSART1_Write(txData);
  1459   000634  5030               	movf	putch@txData^0,w,c
  1460   000636  ECE8  F002         	call	_EUSART1_Write
  1461   00063A  0012               	return		;funcret
  1462   00063C                     __end_of_putch:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _EUSART1_Write *****************
  1466 ;; Defined at:
  1467 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  txData          1    wreg     unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  txData          1    4[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1485 ;;Total ram usage:        1 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 4
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_putch
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text6
  1496   0005D0                     __ptext6:
  1497                           	callstack 0
  1498   0005D0                     _EUSART1_Write:
  1499                           	callstack 21
  1500                           
  1501                           ;incstack = 0
  1502                           ;EUSART1_Write@txData stored from wreg
  1503   0005D0  6E2F               	movwf	EUSART1_Write@txData^0,c
  1504   0005D2                     l182:
  1505                           
  1506                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  1507   0005D2  A89E               	btfss	158,4,c	;volatile
  1508   0005D4  EFEE  F002         	goto	u11
  1509   0005D8  EFF0  F002         	goto	u10
  1510   0005DC                     u11:
  1511   0005DC  EFE9  F002         	goto	l182
  1512   0005E0                     u10:
  1513   0005E0                     
  1514                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  1515   0005E0  C02F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1516   0005E4  0012               	return		;funcret
  1517   0005E6                     __end_of_EUSART1_Write:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _out_dig *****************
  1521 ;; Defined at:
  1522 ;;		line 247 in file "main.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  x               1    wreg     unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  x               1    5[COMRAM] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;Total ram usage:        1 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 5
  1543 ;; This function calls:
  1544 ;;		_SPI_ExchangeByte
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text7
  1551   0005E6                     __ptext7:
  1552                           	callstack 0
  1553   0005E6                     _out_dig:
  1554                           	callstack 25
  1555                           
  1556                           ;incstack = 0
  1557                           ;out_dig@x stored from wreg
  1558   0005E6  6E30               	movwf	out_dig@x^0,c
  1559   0005E8  9A89               	bcf	137,5,c	;volatile
  1560   0005EA                     
  1561                           ;main.c: 250:  SPI_ExchangeByte(0x11);
  1562   0005EA  0E11               	movlw	17
  1563   0005EC  ECCE  F002         	call	_SPI_ExchangeByte
  1564                           
  1565                           ;main.c: 251:  SPI_ExchangeByte(x);
  1566   0005F0  5030               	movf	out_dig@x^0,w,c
  1567   0005F2  ECCE  F002         	call	_SPI_ExchangeByte
  1568   0005F6  8A89               	bsf	137,5,c	;volatile
  1569   0005F8  0012               	return		;funcret
  1570   0005FA                     __end_of_out_dig:
  1571                           	callstack 0
  1572                           
  1573 ;; *************** function _SPI_ExchangeByte *****************
  1574 ;; Defined at:
  1575 ;;		line 92 in file "mcc_generated_files/spi.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  data            1    wreg     unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  data            1    4[COMRAM] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      unsigned char 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;Total ram usage:        1 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 4
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_out_dig
  1600 ;;		_SPI_WriteBlock
  1601 ;;		_SPI_ReadBlock
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text8
  1606   00059C                     __ptext8:
  1607                           	callstack 0
  1608   00059C                     _SPI_ExchangeByte:
  1609                           	callstack 25
  1610                           
  1611                           ;incstack = 0
  1612                           ;SPI_ExchangeByte@data stored from wreg
  1613   00059C  6E2F               	movwf	SPI_ExchangeByte@data^0,c
  1614   00059E                     
  1615                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
  1616   00059E  C02F  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
  1617   0005A2                     l85:
  1618   0005A2  A69E               	btfss	158,3,c	;volatile
  1619   0005A4  EFD6  F002         	goto	u81
  1620   0005A8  EFD8  F002         	goto	u80
  1621   0005AC                     u81:
  1622   0005AC  EFD1  F002         	goto	l85
  1623   0005B0                     u80:
  1624   0005B0                     
  1625                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
  1626   0005B0  969E               	bcf	158,3,c	;volatile
  1627                           
  1628                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
  1629   0005B2  50C9               	movf	201,w,c	;volatile
  1630   0005B4  0012               	return		;funcret
  1631   0005B6                     __end_of_SPI_ExchangeByte:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _SYSTEM_Initialize *****************
  1635 ;; Defined at:
  1636 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 6
  1657 ;; This function calls:
  1658 ;;		_EUSART1_Initialize
  1659 ;;		_INTERRUPT_Initialize
  1660 ;;		_OSCILLATOR_Initialize
  1661 ;;		_PIN_MANAGER_Initialize
  1662 ;;		_SPI_Initialize
  1663 ;;		_TMR1_Initialize
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text9
  1670   0005B6                     __ptext9:
  1671                           	callstack 0
  1672   0005B6                     _SYSTEM_Initialize:
  1673                           	callstack 24
  1674   0005B6                     
  1675                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1676   0005B6  EC32  F003         	call	_INTERRUPT_Initialize	;wreg free
  1677   0005BA                     
  1678                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
  1679   0005BA  EC07  F003         	call	_SPI_Initialize	;wreg free
  1680   0005BE                     
  1681                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  1682   0005BE  EC83  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1683   0005C2                     
  1684                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  1685   0005C2  EC10  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1686   0005C6                     
  1687                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  1688   0005C6  EC39  F002         	call	_TMR1_Initialize	;wreg free
  1689   0005CA                     
  1690                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  1691   0005CA  ECFC  F001         	call	_EUSART1_Initialize	;wreg free
  1692   0005CE  0012               	return		;funcret
  1693   0005D0                     __end_of_SYSTEM_Initialize:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _TMR1_Initialize *****************
  1697 ;; Defined at:
  1698 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;Total ram usage:        2 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 5
  1719 ;; This function calls:
  1720 ;;		_TMR1_SetInterruptHandler
  1721 ;; This function is called by:
  1722 ;;		_SYSTEM_Initialize
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text10
  1727   000472                     __ptext10:
  1728                           	callstack 0
  1729   000472                     _TMR1_Initialize:
  1730                           	callstack 24
  1731   000472                     
  1732                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1733   000472  0E00               	movlw	0
  1734   000474  6EAA               	movwf	170,c	;volatile
  1735                           
  1736                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xEF;
  1737   000476  0EEF               	movlw	239
  1738   000478  6ECF               	movwf	207,c	;volatile
  1739                           
  1740                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xB9;
  1741   00047A  0EB9               	movlw	185
  1742   00047C  6ECE               	movwf	206,c	;volatile
  1743   00047E                     
  1744                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1745   00047E  909E               	bcf	158,0,c	;volatile
  1746   000480                     
  1747                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1748   000480  50CE               	movf	206,w,c	;volatile
  1749   000482  CFCF F031          	movff	4047,??_TMR1_Initialize	;volatile
  1750   000486  6A32               	clrf	(??_TMR1_Initialize+1)^0,c
  1751   000488  C031  F032         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1752   00048C  6A31               	clrf	??_TMR1_Initialize^0,c
  1753   00048E  1031               	iorwf	??_TMR1_Initialize^0,w,c
  1754   000490  6E25               	movwf	_timer1ReloadVal^0,c	;volatile
  1755   000492  5032               	movf	(??_TMR1_Initialize+1)^0,w,c
  1756   000494  6E26               	movwf	(_timer1ReloadVal+1)^0,c	;volatile
  1757   000496                     
  1758                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1759   000496  809D               	bsf	157,0,c	;volatile
  1760   000498                     
  1761                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1762   000498  0E6A               	movlw	low _TMR1_DefaultInterruptHandler
  1763   00049A  6E2F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1764   00049C  0E06               	movlw	high _TMR1_DefaultInterruptHandler
  1765   00049E  6E30               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1766   0004A0  EC1E  F003         	call	_TMR1_SetInterruptHandler	;wreg free
  1767   0004A4                     
  1768                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  1769   0004A4  0E01               	movlw	1
  1770   0004A6  6ECD               	movwf	205,c	;volatile
  1771   0004A8  0012               	return		;funcret
  1772   0004AA                     __end_of_TMR1_Initialize:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _TMR1_SetInterruptHandler *****************
  1776 ;; Defined at:
  1777 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  1780 ;;		 -> myTimer1_ISR(1), TMR1_DefaultInterruptHandler(1), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;Total ram usage:        2 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 4
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_TMR1_Initialize
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text11
  1808   00063C                     __ptext11:
  1809                           	callstack 0
  1810   00063C                     _TMR1_SetInterruptHandler:
  1811                           	callstack 26
  1812   00063C                     
  1813                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  1814   00063C  C02F  F04D         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1815   000640  C030  F04E         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1816   000644  0012               	return		;funcret
  1817   000646                     __end_of_TMR1_SetInterruptHandler:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function _SPI_Initialize *****************
  1821 ;; Defined at:
  1822 ;;		line 62 in file "mcc_generated_files/spi.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; Hardware stack levels required when called: 4
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_SYSTEM_Initialize
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text12
  1851   00060E                     __ptext12:
  1852                           	callstack 0
  1853   00060E                     _SPI_Initialize:
  1854                           	callstack 25
  1855   00060E                     
  1856                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
  1857   00060E  0E40               	movlw	64
  1858   000610  6EC7               	movwf	199,c	;volatile
  1859                           
  1860                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x02;
  1861   000612  0E02               	movlw	2
  1862   000614  6EC6               	movwf	198,c	;volatile
  1863                           
  1864                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
  1865   000616  0E01               	movlw	1
  1866   000618  6EC8               	movwf	200,c	;volatile
  1867   00061A                     
  1868                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
  1869   00061A  9694               	bcf	148,3,c	;volatile
  1870   00061C                     
  1871                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
  1872   00061C  9AC6               	bcf	198,5,c	;volatile
  1873   00061E  0012               	return		;funcret
  1874   000620                     __end_of_SPI_Initialize:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _PIN_MANAGER_Initialize *****************
  1878 ;; Defined at:
  1879 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 4
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_SYSTEM_Initialize
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text13
  1908   000506                     __ptext13:
  1909                           	callstack 0
  1910   000506                     _PIN_MANAGER_Initialize:
  1911                           	callstack 25
  1912   000506                     
  1913                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1914   000506  0E00               	movlw	0
  1915   000508  6E89               	movwf	137,c	;volatile
  1916                           
  1917                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1918   00050A  0E00               	movlw	0
  1919   00050C  6E8A               	movwf	138,c	;volatile
  1920                           
  1921                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1922   00050E  0E00               	movlw	0
  1923   000510  6E8B               	movwf	139,c	;volatile
  1924                           
  1925                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xCF;
  1926   000512  0ECF               	movlw	207
  1927   000514  6E92               	movwf	146,c	;volatile
  1928   000516                     
  1929                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1930   000516  6893               	setf	147,c	;volatile
  1931                           
  1932                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x97;
  1933   000518  0E97               	movlw	151
  1934   00051A  6E94               	movwf	148,c	;volatile
  1935                           
  1936                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  1937   00051C  0E1F               	movlw	31
  1938   00051E  010F               	movlb	15	; () banked
  1939   000520  6F5D               	movwf	93,b	;volatile
  1940                           
  1941                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x07;
  1942   000522  0E07               	movlw	7
  1943   000524  6F5C               	movwf	92,b	;volatile
  1944                           
  1945                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  1946   000526  0E00               	movlw	0
  1947   000528  6F5B               	movwf	91,b	;volatile
  1948   00052A                     
  1949                           ; BSR set to: 15
  1950                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  1951   00052A  8EF1               	bsf	241,7,c	;volatile
  1952   00052C                     
  1953                           ; BSR set to: 15
  1954   00052C  0012               	return		;funcret
  1955   00052E                     __end_of_PIN_MANAGER_Initialize:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _OSCILLATOR_Initialize *****************
  1959 ;; Defined at:
  1960 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; Hardware stack levels required when called: 4
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_SYSTEM_Initialize
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text14
  1989   000620                     __ptext14:
  1990                           	callstack 0
  1991   000620                     _OSCILLATOR_Initialize:
  1992                           	callstack 25
  1993   000620                     
  1994                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x60;
  1995   000620  0E60               	movlw	96
  1996   000622  6ED3               	movwf	211,c	;volatile
  1997                           
  1998                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
  1999   000624  0E00               	movlw	0
  2000   000626  6ED2               	movwf	210,c	;volatile
  2001                           
  2002                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  2003   000628  0E00               	movlw	0
  2004   00062A  6E9B               	movwf	155,c	;volatile
  2005                           
  2006                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
  2007   00062C  0E00               	movlw	0
  2008   00062E  6E9A               	movwf	154,c	;volatile
  2009   000630  0012               	return		;funcret
  2010   000632                     __end_of_OSCILLATOR_Initialize:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _INTERRUPT_Initialize *****************
  2014 ;; Defined at:
  2015 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		None
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;Total ram usage:        0 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 4
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_SYSTEM_Initialize
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text15
  2044   000664                     __ptext15:
  2045                           	callstack 0
  2046   000664                     _INTERRUPT_Initialize:
  2047                           	callstack 25
  2048   000664                     
  2049                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2050   000664  9ED0               	bcf	208,7,c	;volatile
  2051   000666  0012               	return		;funcret
  2052   000668                     __end_of_INTERRUPT_Initialize:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _EUSART1_Initialize *****************
  2056 ;; Defined at:
  2057 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 5
  2078 ;; This function calls:
  2079 ;;		_EUSART1_SetErrorHandler
  2080 ;;		_EUSART1_SetFramingErrorHandler
  2081 ;;		_EUSART1_SetOverrunErrorHandler
  2082 ;; This function is called by:
  2083 ;;		_SYSTEM_Initialize
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text16
  2088   0003F8                     __ptext16:
  2089                           	callstack 0
  2090   0003F8                     _EUSART1_Initialize:
  2091                           	callstack 24
  2092   0003F8                     
  2093                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  2094   0003F8  0E08               	movlw	8
  2095   0003FA  6EA7               	movwf	167,c	;volatile
  2096                           
  2097                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  2098   0003FC  0E90               	movlw	144
  2099   0003FE  6EAB               	movwf	171,c	;volatile
  2100                           
  2101                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  2102   000400  0E24               	movlw	36
  2103   000402  6EAC               	movwf	172,c	;volatile
  2104                           
  2105                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  2106   000404  0E08               	movlw	8
  2107   000406  6EAF               	movwf	175,c	;volatile
  2108                           
  2109                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  2110   000408  0E02               	movlw	2
  2111   00040A  6E7D               	movwf	125,c	;volatile
  2112   00040C                     
  2113                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  2114   00040C  0E00               	movlw	0
  2115   00040E  6E2F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2116   000410  0E00               	movlw	0
  2117   000412  6E30               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2118   000414  EC28  F003         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2119   000418                     
  2120                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  2121   000418  0E00               	movlw	0
  2122   00041A  6E2F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2123   00041C  0E00               	movlw	0
  2124   00041E  6E30               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2125   000420  EC23  F003         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2126   000424                     
  2127                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  2128   000424  0E00               	movlw	0
  2129   000426  6E2F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2130   000428  0E00               	movlw	0
  2131   00042A  6E30               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2132   00042C  EC2D  F003         	call	_EUSART1_SetErrorHandler	;wreg free
  2133   000430                     
  2134                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  2135   000430  0E00               	movlw	0
  2136   000432  6E2A               	movwf	_eusart1RxLastError^0,c	;volatile
  2137   000434  0012               	return		;funcret
  2138   000436                     __end_of_EUSART1_Initialize:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2142 ;; Defined at:
  2143 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2146 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;Total ram usage:        2 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 4
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_EUSART1_Initialize
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text17
  2173   000646                     __ptext17:
  2174                           	callstack 0
  2175   000646                     _EUSART1_SetOverrunErrorHandler:
  2176                           	callstack 24
  2177   000646                     
  2178                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_OverrunErrorHandler = interruptHandler;
  2179   000646  C02F  F051         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2180   00064A  C030  F052         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2181   00064E  0012               	return		;funcret
  2182   000650                     __end_of_EUSART1_SetOverrunErrorHandler:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2186 ;; Defined at:
  2187 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2190 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 4
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_EUSART1_Initialize
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text18
  2217   000650                     __ptext18:
  2218                           	callstack 0
  2219   000650                     _EUSART1_SetFramingErrorHandler:
  2220                           	callstack 24
  2221   000650                     
  2222                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_FramingErrorHandler = interruptHandler;
  2223   000650  C02F  F053         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2224   000654  C030  F054         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2225   000658  0012               	return		;funcret
  2226   00065A                     __end_of_EUSART1_SetFramingErrorHandler:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _EUSART1_SetErrorHandler *****************
  2230 ;; Defined at:
  2231 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2234 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;Total ram usage:        2 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 4
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_EUSART1_Initialize
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text19
  2261   00065A                     __ptext19:
  2262                           	callstack 0
  2263   00065A                     _EUSART1_SetErrorHandler:
  2264                           	callstack 24
  2265   00065A                     
  2266                           ;mcc_generated_files/eusart1.c: 170:     EUSART1_ErrorHandler = interruptHandler;
  2267   00065A  C02F  F04F         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2268   00065E  C030  F050         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2269   000662  0012               	return		;funcret
  2270   000664                     __end_of_EUSART1_SetErrorHandler:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _EUSART1_is_rx_ready *****************
  2274 ;; Defined at:
  2275 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      _Bool 
  2282 ;; Registers used:
  2283 ;;		wreg
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;Total ram usage:        0 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 4
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text20
  2304   0005FA                     __ptext20:
  2305                           	callstack 0
  2306   0005FA                     _EUSART1_is_rx_ready:
  2307                           	callstack 26
  2308   0005FA                     
  2309                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  2310   0005FA  BA9E               	btfsc	158,5,c	;volatile
  2311   0005FC  EF02  F003         	goto	u111
  2312   000600  EF05  F003         	goto	u110
  2313   000604                     u111:
  2314   000604  0E01               	movlw	1
  2315   000606  EF06  F003         	goto	u116
  2316   00060A                     u110:
  2317   00060A  0E00               	movlw	0
  2318   00060C                     u116:
  2319   00060C  0012               	return		;funcret
  2320   00060E                     __end_of_EUSART1_is_rx_ready:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _EUSART1_Read *****************
  2324 ;; Defined at:
  2325 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      unsigned char 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 4
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text21
  2354   00052E                     __ptext21:
  2355                           	callstack 0
  2356   00052E                     _EUSART1_Read:
  2357                           	callstack 26
  2358   00052E                     l175:
  2359                           
  2360                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  2361   00052E  AA9E               	btfss	158,5,c	;volatile
  2362   000530  EF9C  F002         	goto	u121
  2363   000534  EF9E  F002         	goto	u120
  2364   000538                     u121:
  2365   000538  EF97  F002         	goto	l175
  2366   00053C                     u120:
  2367   00053C                     
  2368                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  2369   00053C  0E00               	movlw	0
  2370   00053E  6E2A               	movwf	_eusart1RxLastError^0,c	;volatile
  2371   000540                     
  2372                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  2373   000540  A2AB               	btfss	171,1,c	;volatile
  2374   000542  EFA5  F002         	goto	u131
  2375   000546  EFA7  F002         	goto	u130
  2376   00054A                     u131:
  2377   00054A  EFA9  F002         	goto	l1244
  2378   00054E                     u130:
  2379   00054E                     
  2380                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  2381   00054E  98AB               	bcf	171,4,c	;volatile
  2382                           
  2383                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  2384   000550  88AB               	bsf	171,4,c	;volatile
  2385   000552                     l1244:
  2386                           
  2387                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  2388   000552  50AE               	movf	174,w,c	;volatile
  2389   000554  0012               	return		;funcret
  2390   000556                     __end_of_EUSART1_Read:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _INTERRUPT_InterruptManager *****************
  2394 ;; Defined at:
  2395 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 3
  2416 ;; This function calls:
  2417 ;;		_TMR1_ISR
  2418 ;; This function is called by:
  2419 ;;		Interrupt level 2
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	intcode
  2424   000008                     __pintcode:
  2425                           	callstack 0
  2426   000008                     _INTERRUPT_InterruptManager:
  2427                           	callstack 21
  2428                           
  2429                           ;incstack = 0
  2430   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2431   00000A  CFFA F02D          	movff	pclath,??_INTERRUPT_InterruptManager
  2432   00000E  CFFB F02E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2433   000012                     
  2434                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  2435   000012  ACF2               	btfss	242,6,c	;volatile
  2436   000014  EF0E  F000         	goto	i2u42_41
  2437   000018  EF10  F000         	goto	i2u42_40
  2438   00001C                     i2u42_41:
  2439   00001C  EF20  F000         	goto	i2l288
  2440   000020                     i2u42_40:
  2441   000020                     
  2442                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2443   000020  A09D               	btfss	157,0,c	;volatile
  2444   000022  EF15  F000         	goto	i2u43_41
  2445   000026  EF17  F000         	goto	i2u43_40
  2446   00002A                     i2u43_41:
  2447   00002A  EF20  F000         	goto	i2l288
  2448   00002E                     i2u43_40:
  2449   00002E  A09E               	btfss	158,0,c	;volatile
  2450   000030  EF1C  F000         	goto	i2u44_41
  2451   000034  EF1E  F000         	goto	i2u44_40
  2452   000038                     i2u44_41:
  2453   000038  EF20  F000         	goto	i2l288
  2454   00003C                     i2u44_40:
  2455   00003C                     
  2456                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  2457   00003C  EC1B  F002         	call	_TMR1_ISR	;wreg free
  2458   000040                     i2l288:
  2459   000040  C02E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2460   000044  C02D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2461   000048  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2462   00004A  0011               	retfie		f
  2463   00004C                     __end_of_INTERRUPT_InterruptManager:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _TMR1_ISR *****************
  2467 ;; Defined at:
  2468 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 2
  2489 ;; This function calls:
  2490 ;;		NULL
  2491 ;;		_TMR1_DefaultInterruptHandler
  2492 ;;		_TMR1_WriteTimer
  2493 ;;		_myTimer1_ISR
  2494 ;; This function is called by:
  2495 ;;		_INTERRUPT_InterruptManager
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text23
  2500   000436                     __ptext23:
  2501                           	callstack 0
  2502   000436                     _TMR1_ISR:
  2503                           	callstack 21
  2504   000436                     
  2505                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  2506   000436  909E               	bcf	158,0,c	;volatile
  2507   000438                     
  2508                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2509   000438  C025  F02B         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  2510   00043C  C026  F02C         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  2511   000440  ECAB  F002         	call	_TMR1_WriteTimer	;wreg free
  2512   000444                     
  2513                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  2514   000444  504D               	movf	_TMR1_InterruptHandler^0,w,c
  2515   000446  104E               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  2516   000448  B4D8               	btfsc	status,2,c
  2517   00044A  EF29  F002         	goto	i2u40_41
  2518   00044E  EF2B  F002         	goto	i2u40_40
  2519   000452                     i2u40_41:
  2520   000452  EF38  F002         	goto	i2l260
  2521   000456                     i2u40_40:
  2522   000456                     
  2523                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  2524   000456  D802               	call	i2u41_48
  2525   000458  EF38  F002         	goto	i2u41_49
  2526   00045C                     i2u41_48:
  2527   00045C  0005               	push	
  2528   00045E  6EFA               	movwf	pclath,c
  2529   000460  504D               	movf	_TMR1_InterruptHandler^0,w,c
  2530   000462  6EFD               	movwf	tosl,c
  2531   000464  504E               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  2532   000466  6EFE               	movwf	tosh,c
  2533   000468  50F8               	movf	tblptru,w,c
  2534   00046A  6EFF               	movwf	tosu,c
  2535   00046C  50FA               	movf	pclath,w,c
  2536   00046E  0012               	return		;indir
  2537   000470                     i2u41_49:
  2538   000470                     i2l260:
  2539   000470  0012               	return		;funcret
  2540   000472                     __end_of_TMR1_ISR:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2544 ;; Defined at:
  2545 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		None
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_TMR1_Initialize
  2569 ;;		_TMR1_ISR
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text24
  2574   00066A                     __ptext24:
  2575                           	callstack 0
  2576   00066A                     _TMR1_DefaultInterruptHandler:
  2577                           	callstack 22
  2578   00066A  0012               	return		;funcret
  2579   00066C                     __end_of_TMR1_DefaultInterruptHandler:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _myTimer1_ISR *****************
  2583 ;; Defined at:
  2584 ;;		line 201 in file "main.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 1
  2605 ;; This function calls:
  2606 ;;		_TMR1_WriteTimer
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;;		_TMR1_ISR
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text25
  2614   0004DC                     __ptext25:
  2615                           	callstack 0
  2616   0004DC                     _myTimer1_ISR:
  2617                           	callstack 21
  2618   0004DC                     
  2619                           ;main.c: 204:     TMR1_WriteTimer(periode);
  2620   0004DC  C055  F02B         	movff	_periode,TMR1_WriteTimer@timerVal
  2621   0004E0  C056  F02C         	movff	_periode+1,TMR1_WriteTimer@timerVal+1
  2622   0004E4  ECAB  F002         	call	_TMR1_WriteTimer	;wreg free
  2623   0004E8                     
  2624                           ;main.c: 207:     flag = 1;
  2625   0004E8  0E01               	movlw	1
  2626   0004EA  6E28               	movwf	_flag^0,c
  2627   0004EC                     
  2628                           ;main.c: 208:     i++;
  2629   0004EC  2A29               	incf	_i^0,f,c
  2630   0004EE                     
  2631                           ;main.c: 209:     if (i==60){
  2632   0004EE  0E3C               	movlw	60
  2633   0004F0  1829               	xorwf	_i^0,w,c
  2634   0004F2  A4D8               	btfss	status,2,c
  2635   0004F4  EF7E  F002         	goto	i2u38_41
  2636   0004F8  EF80  F002         	goto	i2u38_40
  2637   0004FC                     i2u38_41:
  2638   0004FC  EF82  F002         	goto	i2l361
  2639   000500                     i2u38_40:
  2640   000500                     
  2641                           ;main.c: 210:         i=0;
  2642   000500  0E00               	movlw	0
  2643   000502  6E29               	movwf	_i^0,c
  2644   000504                     i2l361:
  2645   000504  0012               	return		;funcret
  2646   000506                     __end_of_myTimer1_ISR:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _TMR1_WriteTimer *****************
  2650 ;; Defined at:
  2651 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  timerVal        2    0[COMRAM] unsigned short 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +2  BANK13  BANK11  BANK14
  2665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;Total ram usage:        2 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_TMR1_ISR
  2675 ;;		_myTimer1_ISR
  2676 ;;		_TMR1_Reload
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text26
  2681   000556                     __ptext26:
  2682                           	callstack 0
  2683   000556                     _TMR1_WriteTimer:
  2684                           	callstack 21
  2685   000556                     
  2686                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2687   000556  A4CD               	btfss	205,2,c	;volatile
  2688   000558  EFB0  F002         	goto	i2u36_41
  2689   00055C  EFB2  F002         	goto	i2u36_40
  2690   000560                     i2u36_41:
  2691   000560  EFBA  F002         	goto	i2l1530
  2692   000564                     i2u36_40:
  2693   000564                     
  2694                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2695   000564  90CD               	bcf	205,0,c	;volatile
  2696   000566                     
  2697                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  2698   000566  502C               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  2699   000568  6ECF               	movwf	207,c	;volatile
  2700   00056A                     
  2701                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  2702   00056A  C02B  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  2703   00056E                     
  2704                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2705   00056E  80CD               	bsf	205,0,c	;volatile
  2706                           
  2707                           ;mcc_generated_files/tmr1.c: 133:     }
  2708   000570  EFBE  F002         	goto	i2l247
  2709   000574                     i2l1530:
  2710                           
  2711                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  2712   000574  502C               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  2713   000576  6ECF               	movwf	207,c	;volatile
  2714   000578                     
  2715                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  2716   000578  C02B  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  2717   00057C                     i2l247:
  2718   00057C  0012               	return		;funcret
  2719   00057E                     __end_of_TMR1_WriteTimer:
  2720                           	callstack 0
  2721                           
  2722                           	psect	text27
  2723   000000                     __ptext27:
  2724                           	callstack 0
  2725   000000                     
  2726                           	psect	rparam
  2727   000000                     
  2728                           	psect	temp
  2729   000057                     btemp:
  2730                           	callstack 0
  2731   000057                     	ds	1
  2732   000000                     int$flags	set	btemp
  2733   000000                     wtemp8	set	btemp+1
  2734   000000                     ttemp5	set	btemp+1
  2735   000000                     ttemp6	set	btemp+4
  2736   000000                     ttemp7	set	btemp+8
  2737                           
  2738                           	psect	idloc
  2739                           
  2740                           ;Config register IDLOC0 @ 0x200000
  2741                           ;	unspecified, using default values
  2742   200000                     	org	2097152
  2743   200000  FF                 	db	255
  2744                           
  2745                           ;Config register IDLOC1 @ 0x200001
  2746                           ;	unspecified, using default values
  2747   200001                     	org	2097153
  2748   200001  FF                 	db	255
  2749                           
  2750                           ;Config register IDLOC2 @ 0x200002
  2751                           ;	unspecified, using default values
  2752   200002                     	org	2097154
  2753   200002  FF                 	db	255
  2754                           
  2755                           ;Config register IDLOC3 @ 0x200003
  2756                           ;	unspecified, using default values
  2757   200003                     	org	2097155
  2758   200003  FF                 	db	255
  2759                           
  2760                           ;Config register IDLOC4 @ 0x200004
  2761                           ;	unspecified, using default values
  2762   200004                     	org	2097156
  2763   200004  FF                 	db	255
  2764                           
  2765                           ;Config register IDLOC5 @ 0x200005
  2766                           ;	unspecified, using default values
  2767   200005                     	org	2097157
  2768   200005  FF                 	db	255
  2769                           
  2770                           ;Config register IDLOC6 @ 0x200006
  2771                           ;	unspecified, using default values
  2772   200006                     	org	2097158
  2773   200006  FF                 	db	255
  2774                           
  2775                           ;Config register IDLOC7 @ 0x200007
  2776                           ;	unspecified, using default values
  2777   200007                     	org	2097159
  2778   200007  FF                 	db	255
  2779                           
  2780                           	psect	config
  2781                           
  2782                           ;Config register CONFIG1L @ 0x300000
  2783                           ;	VREG Sleep Enable bit
  2784                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  2785                           ;	LF-INTOSC Low-power Enable bit
  2786                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  2787                           ;	SOSC Power Selection and mode Configuration bits
  2788                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  2789                           ;	Extended Instruction Set
  2790                           ;	XINST = OFF, Disabled
  2791   300000                     	org	3145728
  2792   300000  15                 	db	21
  2793                           
  2794                           ;Config register CONFIG1H @ 0x300001
  2795                           ;	Oscillator
  2796                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  2797                           ;	PLL x4 Enable bit
  2798                           ;	PLLCFG = OFF, Disabled
  2799                           ;	Fail-Safe Clock Monitor
  2800                           ;	FCMEN = OFF, Disabled
  2801                           ;	Internal External Oscillator Switch Over Mode
  2802                           ;	IESO = OFF, Disabled
  2803   300001                     	org	3145729
  2804   300001  02                 	db	2
  2805                           
  2806                           ;Config register CONFIG2L @ 0x300002
  2807                           ;	Power Up Timer
  2808                           ;	PWRTEN = OFF, Disabled
  2809                           ;	Brown Out Detect
  2810                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  2811                           ;	Brown-out Reset Voltage bits
  2812                           ;	BORV = 3, 1.8V
  2813                           ;	BORMV Power level
  2814                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  2815   300002                     	org	3145730
  2816   300002  7F                 	db	127
  2817                           
  2818                           ;Config register CONFIG2H @ 0x300003
  2819                           ;	Watchdog Timer
  2820                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  2821                           ;	Watchdog Postscaler
  2822                           ;	WDTPS = 1048576, 1:1048576
  2823   300003                     	org	3145731
  2824   300003  50                 	db	80
  2825                           
  2826                           ; Padding undefined space
  2827   300004                     	org	3145732
  2828   300004  FF                 	db	255
  2829                           
  2830                           ;Config register CONFIG3H @ 0x300005
  2831                           ;	ECAN Mux bit
  2832                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  2833                           ;	MSSP address masking
  2834                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  2835                           ;	Master Clear Enable
  2836                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  2837   300005                     	org	3145733
  2838   300005  89                 	db	137
  2839                           
  2840                           ;Config register CONFIG4L @ 0x300006
  2841                           ;	Stack Overflow Reset
  2842                           ;	STVREN = ON, Enabled
  2843                           ;	Boot Block Size
  2844                           ;	BBSIZ = BB2K, 2K word Boot Block size
  2845                           ;	Background Debugger
  2846                           ;	DEBUG = 0x1, unprogrammed default
  2847   300006                     	org	3145734
  2848   300006  91                 	db	145
  2849                           
  2850                           ; Padding undefined space
  2851   300007                     	org	3145735
  2852   300007  FF                 	db	255
  2853                           
  2854                           ;Config register CONFIG5L @ 0x300008
  2855                           ;	Code Protect 00800-01FFF
  2856                           ;	CP0 = OFF, Disabled
  2857                           ;	Code Protect 02000-03FFF
  2858                           ;	CP1 = OFF, Disabled
  2859                           ;	Code Protect 04000-05FFF
  2860                           ;	CP2 = OFF, Disabled
  2861                           ;	Code Protect 06000-07FFF
  2862                           ;	CP3 = OFF, Disabled
  2863   300008                     	org	3145736
  2864   300008  0F                 	db	15
  2865                           
  2866                           ;Config register CONFIG5H @ 0x300009
  2867                           ;	Code Protect Boot
  2868                           ;	CPB = OFF, Disabled
  2869                           ;	Data EE Read Protect
  2870                           ;	CPD = OFF, Disabled
  2871   300009                     	org	3145737
  2872   300009  C0                 	db	192
  2873                           
  2874                           ;Config register CONFIG6L @ 0x30000A
  2875                           ;	Table Write Protect 00800-01FFF
  2876                           ;	WRT0 = OFF, Disabled
  2877                           ;	Table Write Protect 02000-03FFF
  2878                           ;	WRT1 = OFF, Disabled
  2879                           ;	Table Write Protect 04000-05FFF
  2880                           ;	WRT2 = OFF, Disabled
  2881                           ;	Table Write Protect 06000-07FFF
  2882                           ;	WRT3 = OFF, Disabled
  2883   30000A                     	org	3145738
  2884   30000A  0F                 	db	15
  2885                           
  2886                           ;Config register CONFIG6H @ 0x30000B
  2887                           ;	Config. Write Protect
  2888                           ;	WRTC = OFF, Disabled
  2889                           ;	Table Write Protect Boot
  2890                           ;	WRTB = OFF, Disabled
  2891                           ;	Data EE Write Protect
  2892                           ;	WRTD = OFF, Disabled
  2893   30000B                     	org	3145739
  2894   30000B  E0                 	db	224
  2895                           
  2896                           ;Config register CONFIG7L @ 0x30000C
  2897                           ;	Table Read Protect 00800-01FFF
  2898                           ;	EBTR0 = OFF, Disabled
  2899                           ;	Table Read Protect 02000-03FFF
  2900                           ;	EBTR1 = OFF, Disabled
  2901                           ;	Table Read Protect 04000-05FFF
  2902                           ;	EBTR2 = OFF, Disabled
  2903                           ;	Table Read Protect 06000-07FFF
  2904                           ;	EBTR3 = OFF, Disabled
  2905   30000C                     	org	3145740
  2906   30000C  0F                 	db	15
  2907                           
  2908                           ;Config register CONFIG7H @ 0x30000D
  2909                           ;	Table Read Protect Boot
  2910                           ;	EBTRB = OFF, Disabled
  2911   30000D                     	org	3145741
  2912   30000D  40                 	db	64
  2913                           tosu	equ	0xFFF
  2914                           tosh	equ	0xFFE
  2915                           tosl	equ	0xFFD
  2916                           stkptr	equ	0xFFC
  2917                           pclatu	equ	0xFFB
  2918                           pclath	equ	0xFFA
  2919                           pcl	equ	0xFF9
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           prodh	equ	0xFF4
  2925                           prodl	equ	0xFF3
  2926                           indf0	equ	0xFEF
  2927                           postinc0	equ	0xFEE
  2928                           postdec0	equ	0xFED
  2929                           preinc0	equ	0xFEC
  2930                           plusw0	equ	0xFEB
  2931                           fsr0h	equ	0xFEA
  2932                           fsr0l	equ	0xFE9
  2933                           wreg	equ	0xFE8
  2934                           indf1	equ	0xFE7
  2935                           postinc1	equ	0xFE6
  2936                           postdec1	equ	0xFE5
  2937                           preinc1	equ	0xFE4
  2938                           plusw1	equ	0xFE3
  2939                           fsr1h	equ	0xFE2
  2940                           fsr1l	equ	0xFE1
  2941                           bsr	equ	0xFE0
  2942                           indf2	equ	0xFDF
  2943                           postinc2	equ	0xFDE
  2944                           postdec2	equ	0xFDD
  2945                           preinc2	equ	0xFDC
  2946                           plusw2	equ	0xFDB
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    184
    Data        2
    BSS         42
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      86
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK11          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[7]), STR_2(CODE[7]), STR_3(CODE[7]), STR_4(CODE[7]), 
		 -> STR_5(CODE[8]), STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), 
		 -> STR_9(CODE[24]), 

    S1515$buffer	PTR unsigned char  size(2) Largest target is 0

    S1515$source	PTR const unsigned char  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTimer1_ISR(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTimer1_ISR(), TMR1_DefaultInterruptHandler(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[7]), STR_2(CODE[7]), STR_3(CODE[7]), STR_4(CODE[7]), 
		 -> STR_5(CODE[8]), STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), 
		 -> STR_9(CODE[24]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[7]), STR_2(CODE[7]), STR_3(CODE[7]), STR_4(CODE[7]), 
		 -> STR_5(CODE[8]), STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), 
		 -> STR_9(CODE[24]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _out_dig->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer
    _myTimer1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2938
                                             29 COMRAM     5     5      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                            _out_dig
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               5     3      2    2103
                                             26 COMRAM     3     1      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     2      5    1367
                                             19 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                            9     5      4    1020
                                             15 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     660
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      30
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _out_dig                                              1     1      0      30
                                              5 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _SPI_ExchangeByte                                     1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                              6 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           2     2      0     632
                                              2 COMRAM     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     632
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                       _myTimer1_ISR *
 ---------------------------------------------------------------------------------
 (9) _myTimer1_ISR                                         0     0      0     316
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _out_dig
     _SPI_ExchangeByte
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _myTimer1_ISR *
       _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      11A      0       0      35        0.0%
BITBANK13          100      0       0      45        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      44        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      42        0.0%
BANK11             100      0       0      43        0.0%
BITBANK10          100      0       0      19        0.0%
BANK10             100      0       0      20        0.0%
BITBANK9           100      0       0      41        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      40        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      39        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      38        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      37        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      56       1       91.5%
BITBANK14           41      0       0      46        0.0%
BANK14              41      0       0      47        0.0%
BITBIGSFRlllhl      1F      0       0      34        0.0%
BITBIGSFRhl         1D      0       0      24        0.0%
BITBIGSFRlhlhhh     15      0       0      27        0.0%
BITBIGSFRhh          D      0       0      23        0.0%
BITBIGSFRlllhh       B      0       0      33        0.0%
BITBIGSFRlhlhl       8      0       0      29        0.0%
BITBIGSFRllhl        6      0       0      32        0.0%
BITBIGSFRllhh        5      0       0      31        0.0%
BITBIGSFRlhhl        3      0       0      26        0.0%
BITBIGSFRlhlhhl      2      0       0      28        0.0%
BITBIGSFRlhhh        1      0       0      25        0.0%
BITBIGSFRlhll        1      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56      36        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 20 16:25:26 2025

                                _SPI_Initialize 060E                                               _i 0029  
                                            l23 05CE                                              l26 0630  
                                            l51 052C                                              l75 061E  
                                            l85 05A2                                              l87 05B0  
                                            l88 05B4                                              u10 05E0  
                                            u11 05DC                                              u80 05B0  
                                            u81 05AC                                             l200 0658  
                                           l203 064E                                             l206 0662  
                                           l233 04A8                                             l330 0074  
                                           l166 060C                                             l158 0434  
                                           l182 05D2                                             l175 052E  
                                           l263 0644                                             l336 00FE  
                                           l185 05E4                                             l337 00F6  
                                           l179 0554                                             l364 05E8  
                                           l188 063A                                             l279 0666  
                                           l368 05F8                                             u110 060A  
                                           u111 0604                                             u120 053C  
                                           u121 0538                                             u130 054E  
                                           u131 054A                                             u116 060C  
                                           u320 0284                                             u321 0280  
                                           u330 0296                                             u331 0292  
                                           u340 02BE                                             u500 00EE  
                                           u341 02BA                                             u501 00EA  
                                           u350 02F4                                             u351 02F0  
                                           u370 035E                                             u450 0084  
                                           u371 035A                                             u451 0080  
                                           u460 0098                                             u461 0094  
                                           u390 03EE                                             u470 00B0  
                                           u391 03EA                                             u471 00AC  
                                           u480 00C2                                             u481 00BE  
                                           u490 00DC                                             u491 00D8  
                               _timer1ReloadVal 0025                                             _car 7F3B  
                                           _sin 7F77                                             _tri 7EFF  
                                           tosl 0FFD                                             wreg 0FE8  
                                    _TXSTA1bits 0FAC                                            l1100 05D2  
                                          l1102 05E0                                            l1104 0634  
                                          l1240 0540                                            l1232 05FA  
                                          l1160 0664                                            l1072 03B0  
                                          l1049 059A                                            l1242 054E  
                                          l1170 0516                                            l1162 060E  
                                          l1090 033A                                            l1244 0552  
                                          l1236 052E                                            l1172 052A  
                                          l1164 061A                                            l1500 0284  
                                          l1238 053C                                            l1174 0620  
                                          l1166 061C                                            l1262 05EA  
                                          l1502 0296                                            l1078 03F6  
                                          l1512 0650                                            l1168 0506  
                                          l1600 05C2                                            l1264 05F6  
                                          l1504 02A0                                            l1514 0646  
                                          l1602 05C6                                            l1506 02BE  
                                          l1516 065A                                            l1604 05CA  
                                          l1508 02F4                                            l1540 0376  
                                          l1700 01C0                                            l1518 063C  
                                          l1198 059E                                            l1542 037A  
                                          l1534 033C                                            l1614 057E  
                                          l1702 01D4                                            l1630 0050  
                                          l1560 0498                                            l1552 0472  
                                          l1536 035E                                            l1616 0582  
                                          l1712 0208                                            l1640 006C  
                                          l1632 0058                                            l1570 0424  
                                          l1562 04A4                                            l1554 047E  
                                          l1538 036A                                            l1546 038A  
                                          l1714 021C                                            l1706 01E4  
                                          l1650 009E                                            l1722 023C  
                                          l1642 006E                                            l1634 005C  
                                          l1572 0430                                            l1564 03F8  
                                          l1556 0480                                            l1708 01F8  
                                          l1660 00DC                                            l1652 00B0  
                                          l1644 0074                                            l1636 005E  
                                          l1566 040C                                            l1558 0496  
                                          l1590 03EE                                            l1718 022C  
                                          l1670 0116                                            l1662 00DE  
                                          l1654 00B2                                            l1646 0084  
                                          l1638 0060                                            l1568 0418  
                                          l1584 03B2                                            l1680 013E  
                                          l1672 011E                                            l1664 00EE  
                                          l1656 00C2                                            l1648 0098  
                                          l1594 05B6                                            l1498 0272  
                                          l1586 03BE                                            l1690 0166  
                                          l1674 0126                                            l1666 0102  
                                          l1658 00CA                                            l1596 05BA  
                                          l1588 03D2                                            l1772 0192  
                                          l1692 016E                                            l1684 014E  
                                          l1668 010A                                            l1598 05BE  
                                          l1774 0250                                            l1686 0156  
                                          l1678 0136                                            l1698 017E  
                                          STR_1 7FD7                                            STR_2 7FDE  
                                          STR_3 7FE5                                            STR_4 7FEC  
                                          STR_5 7FCF                                            STR_6 7FF7  
                                          STR_7 7FF3                                            STR_8 7FFB  
                                          STR_9 7FB7                                            _LATA 0F89  
                                          _LATB 0F8A                                            _LATC 0F8B  
                                   main@lecture 004B                                            _WPUB 0F5B  
                                 _EUSART1_Write 05D0                                            _dbuf 0001  
                                          _flag 0028                                            _main 0050  
                                 ?_EUSART1_Read 002B                                            _prec 0023  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                            btemp 0057  
                                          start 004C                          __end_of_SPI_Initialize 0620  
                    ??_TMR1_SetInterruptHandler 0031                                    ___param_bank 0000  
                 __end_of_OSCILLATOR_Initialize 0632                                           ?_main 002B  
                                         _T1CON 0FCD                                           i2l260 0470  
                                         i2l247 057C                                           i2l361 0504  
                                         i2l266 066A                                           i2l288 0040  
                                  vfpfcnvrt@fmt 003C                                           _TMR1H 0FCF  
                                         _TMR1L 0FCE                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                              __end_of_TMR1_ISR 0472                                           _flags 0027  
                                         _fputc 0272                                           _width 0021  
                                         _putch 0632                                  ?_EUSART1_Write 002B  
                       __end_of_TMR1_Initialize 04AA                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                ??_EUSART1_Read 002F                                 __end_of_out_dig 05FA  
                                         ttemp5 0058                                           ttemp6 005B  
                                         ttemp7 005F                                           status 0FD8  
                                         wtemp8 0058              _EUSART1_DefaultFramingErrorHandler 0000  
                               _TMR1_WriteTimer 0556                                 ?_SPI_Initialize 002B  
                               __initialization 04AA                      __end_of_EUSART1_Initialize 0436  
                                  __end_of_main 0272                     ?_INTERRUPT_InterruptManager 002B  
                                        ??_main 0048                                   __activetblptr 0002  
                      __end_of_SPI_ExchangeByte 05B6                                          ?_fputc 0031  
                                        _ANCON0 0F5D                                          _ANCON1 0F5C  
                                        ?_putch 002B                                          _T1GCON 0FAA  
                       TMR1_WriteTimer@timerVal 002B                                          i2l1520 0556  
                                        i2l1522 0564                                          i2l1530 0574  
                                        i2l1610 0444                                          i2l1532 0578  
                                        i2l1524 0566                                          i2l1612 0456  
                                        i2l1526 056A                                          i2l1606 0436  
                                        i2l1622 0012                                          i2l1528 056E  
                                        i2l1608 0438                                          i2l1624 0020  
                                        i2l1626 002E                                          i2l1580 04EE  
                                        i2l1628 003C                                          i2l1582 0500  
                                        i2l1574 04DC                                          i2l1576 04E8  
                                        i2l1578 04EC                                          _RCREG1 0FAE  
                                        _RCSTA1 0FAB                                          _OSCCON 0FD3  
                                        _SPBRG1 0FAF                                          _SSPADD 0FC8  
                                        _SSPBUF 0FC9                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC            __end_of_TMR1_DefaultInterruptHandler 066C  
                  _TMR1_DefaultInterruptHandler 066A                                    vfprintf@cfmt 0043  
                               fp__myTimer1_ISR 0000                        ?_EUSART1_SetErrorHandler 002F  
                                        clear_0 04C8                                          isa$std 0001  
                                        _printf 057E                ??_EUSART1_SetOverrunErrorHandler 0031  
               ?_EUSART1_SetOverrunErrorHandler 002F                                          fputc@c 0031  
                                  __pdataCOMRAM 0055                                    __mediumconst 7EFE  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                                       ??_out_dig 0030  
                              __end_of_vfprintf 03F8                                 ??_EUSART1_Write 002F  
      TMR1_SetInterruptHandler@InterruptHandler 002F                         __end_of_TMR1_WriteTimer 057E  
                              ?_TMR1_Initialize 002B                               _SYSTEM_Initialize 05B6  
                                    __accesstop 0060                         __end_of__initialization 04CE  
                            ?_SYSTEM_Initialize 002B                                   ___rparam_used 0001  
                                __pcstackCOMRAM 002B                             ??_SYSTEM_Initialize 0033  
                                     ?_TMR1_ISR 002B                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 002B                                   __end_of_fputc 033C  
                                 __end_of_putch 063C                            __end_of_EUSART1_Read 0556  
                                 ?_myTimer1_ISR 002B                                         ??_fputc 0035  
                     __end_of_SYSTEM_Initialize 05D0                                         ??_putch 0030  
                                    __pnvCOMRAM 004D                 __end_of_EUSART1_SetErrorHandler 0664  
                                    ??_TMR1_ISR 002D                                         ?_printf 0045  
        __end_of_EUSART1_SetFramingErrorHandler 065A                  _EUSART1_SetFramingErrorHandler 0650  
                                ??_myTimer1_ISR 002D                                         _REFOCON 0F9A  
                                       _OSCCON2 0FD2                                         i2u40_40 0456  
                                       i2u40_41 0452                                         i2u41_48 045C  
                                       i2u42_40 0020                                         i2u41_49 0470  
                                       i2u42_41 001C                                         i2u43_40 002E  
                                       i2u43_41 002A                                         i2u36_40 0564  
                                       i2u44_40 003C                                         i2u36_41 0560  
                                       i2u44_41 0038                                         i2u38_40 0500  
                                       i2u38_41 04FC                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0F7D                                         _SSPCON1 0FC6  
                                       _SSPCON2 0FC5                                         _SSPSTAT 0FC7  
                              ?_TMR1_WriteTimer 002B                                ??_SPI_Initialize 002F  
                                       __Hparam 0000                                         __Lparam 0000  
                                     ?_vfprintf 003E                             _EUSART1_is_rx_ready 05FA  
                                       __pcinit 04AA                                         __ramtop 0F00  
                                       __ptext0 0050                                         __ptext1 057E  
                                       __ptext2 03B2                                         __ptext3 033C  
                                       __ptext4 0272                                         __ptext5 0632  
                                       __ptext6 05D0                                         __ptext7 05E6  
                                       __ptext8 059C                                         __ptext9 05B6  
                ??_TMR1_DefaultInterruptHandler 002B                                       _T1CONbits 0FCD  
                         _OSCILLATOR_Initialize 0620                              _EUSART1_Initialize 03F8  
                                       _periode 0055                        ??_PIN_MANAGER_Initialize 002F  
                     ?_TMR1_SetInterruptHandler 002F                                         _out_dig 05E6  
                             ?_SPI_ExchangeByte 002B                            end_of_initialization 04CE  
                          ?_EUSART1_is_rx_ready 002B                             ?_EUSART1_Initialize 002B  
                            ??_SPI_ExchangeByte 002F                                         fputc@fp 0033  
                                 __Lmediumconst 7EFE                     _EUSART1_OverrunErrorHandler 0051  
                             __end_of_vfpfcnvrt 03B2                                         postdec2 0FDD  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                      ??_vfprintf 0043  
                          ??_EUSART1_Initialize 0031                               _spi_configuration 7FB3  
                                     _TRISCbits 0F94                             EUSART1_Write@txData 002F  
                         ??_EUSART1_is_rx_ready 002F                                    _EUSART1_Read 052E  
                          __end_of_myTimer1_ISR 0506                                      main@lettre 004A  
                  __end_of_INTERRUPT_Initialize 0668                            SPI_ExchangeByte@data 002F  
                     __end_of_spi_configuration 7FB7                                     vfpfcnvrt@ap 003D  
                                   vfpfcnvrt@fp 003A                                   __pidataCOMRAM 0668  
                        ?_OSCILLATOR_Initialize 002B                                  __end_of_printf 059C  
                           start_initialization 04AA                                     __end_of_car 7F77  
                                   __end_of_sin 7FB3                                     __end_of_tri 7F3B  
                                   putch@txData 0030                           __end_of_EUSART1_Write 05E6  
                                   vfprintf@fmt 0040                                        ??_printf 0047  
                                   __pbssCOMRAM 0001                ??_EUSART1_SetFramingErrorHandler 0031  
               ?_EUSART1_SetFramingErrorHandler 002F                          _PIN_MANAGER_Initialize 0506  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 0646  
                                 __pmediumconst 7EFE                    ??_INTERRUPT_InterruptManager 002D  
                                      _BAUDCON1 0FA7              _EUSART1_DefaultOverrunErrorHandler 0000  
                          _EUSART1_ErrorHandler 004F                         _EUSART1_SetErrorHandler 065A  
                                      ?_out_dig 002B                            _INTERRUPT_Initialize 0664  
                                      _LATAbits 0F89         EUSART1_SetErrorHandler@interruptHandler 002F  
                                      _PIE1bits 0F9D                                        _PIR1bits 0F9E  
                                      _RCONbits 0FD0                                        _TMR1_ISR 0436  
                                     _vfpfcnvrt 033C                               ??_TMR1_Initialize 0031  
                                  _myTimer1_ISR 04DC                                     _INTCON2bits 0FF1  
                         ?_INTERRUPT_Initialize 002B                                        __Hrparam 0000  
                                    vfprintf@ap 0042                                        __Lrparam 0000  
                                    vfprintf@fp 003E                         ??_OSCILLATOR_Initialize 002F  
                                    ?_vfpfcnvrt 003A                        _TMR1_SetInterruptHandler 063C  
                         _TMR1_InterruptHandler 004D                       ??_EUSART1_SetErrorHandler 0031  
                   _EUSART1_DefaultErrorHandler 0000                     __end_of_EUSART1_is_rx_ready 060E  
                                      __ptext10 0472                                        __ptext11 063C  
                                      __ptext20 05FA                                        __ptext12 060E  
                                      __ptext21 052E                                        __ptext13 0506  
                                    _T1GCONbits 0FAA                                        __ptext14 0620  
                                      __ptext23 0436                                        __ptext15 0664  
                                      __ptext24 066A                                        __ptext16 03F8  
                                      __ptext25 04DC                                        __ptext17 0646  
                                      __ptext26 0556                                        __ptext18 0650  
                                      __ptext27 0000                                        __ptext19 065A  
EUSART1_SetOverrunErrorHandler@interruptHandler 002F                                        isa$xinst 0000  
                                      int$flags 0057                                        _vfprintf 03B2  
            __end_of_INTERRUPT_InterruptManager 004C                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0045                               ??_TMR1_WriteTimer 002D  
                                      main@freq 004C                     _EUSART1_FramingErrorHandler 0053  
                                    _INTCONbits 0FF2                          ??_INTERRUPT_Initialize 002F  
                                      intlevel2 0000                         ?_PIN_MANAGER_Initialize 002B  
        __end_of_EUSART1_SetOverrunErrorHandler 0650                  _EUSART1_SetOverrunErrorHandler 0646  
                                    _RCSTA1bits 0FAB                                _SPI_ExchangeByte 059C  
                                      printf@ap 0047  EUSART1_SetFramingErrorHandler@interruptHandler 002F  
                                      out_dig@x 0030                                     ??_vfpfcnvrt 003E  
                            _eusart1RxLastError 002A                                     _SSPCON1bits 0FC6  
                __end_of_PIN_MANAGER_Initialize 052E                                 _TMR1_Initialize 0472  
